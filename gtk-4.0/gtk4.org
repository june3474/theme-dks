#+TITLE: gtk.css in org
#+PROPERTY: header-args :tangle gtk.css

*To generate gtk.css, M-x org-babel-tangle*

* Table of Contents :toc:
* Base
** colors
#+BEGIN_SRC css

  @import url("colors.css");

#+END_SRC
** default
*Note:* ,* is converted to * when tangled.
#+begin_src css

  /*************************************************/
  /*                  DEFAULT                      */
  /*************************************************/

  ,* {
      background-clip: padding-box;
      color: inherit;
  }

  ,*:selected {
      background-color: @selected_bg_color;
      color: @selected_fg_color;
  }

  ,*:disabled {
      color: @insensitive_fg_color;
  }

  ,*:link {
      color: @link_color;
      text-decoration: underline;
  }

#+end_src
*** text, image & icon
#+begin_src css

  /* TEXT */

  text {
      background: inherit;
  }

  /* IMAGE & ICON */
  
  image:disabled {
      opacity: 0.6;
  }

  ,*:checked image,
  ,*:selected image {
      color: @selected_fg_color;
  }

  picture:disabled {
      opacity: 0.6;
  }

  .normal-icons {
      min-height: 16px;
      min-width: 16px;
  }

  .large-icons {
      min-height: 32px;
      min-width: 32px;      
  }

#+end_src
*** typography
#+begin_src css
  
  /* Typography */

  .large-title {
      font-weight: 300;
      font-size: 240%;
  }
  .title-1 {
      font-weight: 800;
      font-size: 200%;
  }
  .title-2 {
      font-weight: 800;
      font-size: 150%;
  }
  .title-3 {
      font-weight: 700;
      font-size: 150%;
  }
  .title-4 {
      font-weight: 700;
      font-size: 130%;
  }
  .heading {
      font-weight: 700;
      font-size: 110%;
  }
  .body {
      font-weight: 400;
      font-size: 110%;
  }
  .caption-heading {
      font-weight: 700;
      font-size: 90%;
  }
  .caption {
      font-weight: 400;
      font-size: 90%;
  }

#+end_src
*** selection
selection is not a widget but a css subnode when a widget--such as GtkText(text) and
GtkLabel(label)--has a selection.
Below are the css nodes of text widget.

text[.read-only]
├── placeholder
├── undershoot.left
├── undershoot.right
├── [selection]
├── [block-cursor]
╰── [window.popup]
[[https://docs.gtk.org/gtk4/class.Text.html][link]]

#+begin_src css

  /*************************************************/
  /*                 SELECTION                     */
  /*************************************************/

  selection {
      color: @selected_fg_color;
      background-color: @selected_bg_color;
      /*
      text-shadow:  0 -1px alpha(#ffffff, 0.04),
                    -1px  0px alpha(@fg_color, 0.05),
                    1px  0px alpha(@fg_color, 0.05),
                    0px  1px alpha(@fg_color, 0.3),
                    0px  2px alpha(@fg_color, 0.05);
     ,*/
  }

  selection:disabled {
      color: #90b5ec;
  }

  ,*.error selection,
  ,*.search-missing selection {
      background-color: white;
      color: #FC4138;
  }

  ,*.warning selection {
      background-color: white;
      /* background-image: linear-gradient(to bottom, #ffffff, #ffffff); */
      color: #F27835;
  }
#+end_src
* Basic Controls
** label
The GtkLabel widget displays a small amount of text.

label
├── [selection]
├── [link]
┊
╰── [link]
[[https://docs.gtk.org/gtk4/class.Label.html][link]]

#+begin_src css

  /*************************************************/
  /*                   LABEL                       */
  /*************************************************/

  label {
      background-color: transparent;
  }
  
  label:not(:selected) selection {
      color: @selected_fg_color;
      text-shadow:  0 -1px alpha(@selected_fg_color, 0.04),
                    -1px  0px alpha(@fg_color, 0.05),
                    1px  0px alpha(@fg_color, 0.05),
                    0px  1px alpha(@fg_color, 0.3),
                    0px  2px alpha(@fg_color, 0.05);
      background-color: @selected_bg_color;
  }

  label.warning,
  label.warning selection {
      color: @warning_color;
  }

  label.error,
  label.error selection {
      color: @error_color;
  }

  label:disabled:selected,
  label:disabled selection {
      color: @insensitive_fg_color;
  }

  label.separator {
      opacity: 0.55;
  }
#+end_src
** button
GtkButton has a single CSS node with name button. The node will get the style classes .image-button or .text-button, if the content is just an image or label, respectively. It may also receive the .flat style class.

Button-like widgets like GtkToggleButton, GtkMenuButton, GtkVolumeButton, GtkLockButton, GtkColorButton or GtkFontButton use style classes such as .toggle, .popup, .scale, .lock, .color on the button node to differentiate themselves from a plain GtkButton.
[[https://docs.gtk.org/gtk4/class.Button.html][link]]

#+begin_src css

  /*************************************************/
  /*                    BUTTON                     */
  /*************************************************/

  .small-button {
      min-height: 16px;
      min-width: 16px;
  }

  button {
      background-clip: border-box;      
      min-height: 24px;
      min-width: 24px;
      transition: all 200ms cubic-bezier(0.25, 0.46, 0.45, 0.94);
      font-weight: normal;
      border: 1px solid @border_color;
      border-radius: 4px;
      padding: 3px 6px;
      color: @fg_color;
      background-color: transparent;
      background-image: linear-gradient(to bottom, #f1f1f1, #f0f0f0 48%, #eeeeee 50%, #e6e6e6);
  }

  button:active,
  button:active:hover { /* Actually, "active" acompanies "hover" */
      color: @selected_fg_color;
      background-color: @button_active_bg;
      /* required because the background-image of the button which is defined above is inherited */
      background-image: none;
  }

  button:checked {
      color: @selected_fg_color;
      background-color: @button_checked_bg;
      /* required because the background-image of the button which is defined above is inherited */
      background-image: none;
  }

  button:checked:hover {
      /* shade() leaves the color unchanged when the number is 1 and transforms it to black or white as the number approaches 0 or 2 respectively. */        
      background-color: shade(@button_checked_bg, 1.2);
  }

  button:hover {
      background-color: shade(@button_bg, 1.2);
      background-image: none;
  }

  button:link {
      background-image: none;
      background-color: transparent;
      border: none;
  }

  button:link label {
      text-decoration: underline;
  }

  button:disabled {
      color: @insensitive_fg_color;
  }

  button:disabled:checked,
  button:disabled:checked label {
      color: shade(@insensitive_fg_color, 1.25);
      background-image: none;
  }

  button.dnd {
      padding: 0 6px;
      transition: none;
      color: @selected_fg_color;
      background-color: @selected_bg_color;
      border-style: none;
  }

  button.dnd:hover,
  button.dnd:active {
      text-shadow:  0 -1px alpha(@selected_fg_color, 0.04),
                    -1px  0px alpha(@fg_color, 0.05),
                    1px  0px alpha(@fg_color, 0.05),
                    0px  1px alpha(@fg_color, 0.3),
                    0px  2px alpha(@fg_color, 0.05);
  }

  button.font separator {
      background-color: transparent;
  }

  button.file separator {
      background-color: transparent;
  }
#+end_src
**** text button
#+begin_src css
  
  /* text button */

  button.text-button:not(.image-button) {
     /* nothing to add */
  }
#+end_src
**** image button
#+begin_src css

  /* image button */

  button.image-button:not(.text-button) {
      /* If not min-height/width, Adwaita would override. */ 
      min-height: 24px;
      min-width: 24px;
      /* make it square */
      padding: 3px;
  }

  button.image-button:active:hover image,
  button.image-button:checked image,
  button.image-button.radio:checked image {
      color: white;
  }
#+end_src
**** text & image button
#+begin_src css

  /* text & image button */

  button.image-text-button,
  button.text-button.image-button {
      /* nothing to add */
  }

  button.image-text-button image + label,
  button.text-button.image-button image + label {
      margin-left: 5px;
  }

  button.image-text-button label + image,
  button.text-button.image-button label + image {
      margin-left: 5px;
  }

  button.image-text-button.popup
  button.text-button.image-button.popup {
      padding-right: 8px;
      padding-left: 8px;
  }
#+end_src
**** titlebutton
minimize, maxmize, close buttons

#+begin_src css

      /* title button - minimize, maxmize, close buttons */

      headerbar button.titlebutton,
      .titlebar button.titlebutton,
      windowcontrols > button {
          padding: 0;
          min-width: 18px;
          min-height: 18px;
          box-shadow: none;
          border: none;
          border-radius: 50%;
          color: transparent;
          background-color: transparent;
          background-image: none;
      }

      headerbar button.titlebutton:not(:last-child),
      .titlebar button.titlebutton:not(:last-child),
      windowcontrols > button:not(:last-child) {
          margin-right: 5px;
      }

      headerbar button.titlebutton.close,
      .titlebar button.titlebutton.close,
      windowcontrols > button.close {
          color: rgba(255, 255, 255, 1);
          background-color: rgba(211, 0, 10, 0.7) ;
          /* It seems impossible to load custom icons with -gtk-icon-source.
             Gtk loads "window-close/maximize/minimize-symbolic" icon
             from the current icon theme.

          -gtk-icon-source: -gtk-scaled(-gtk-recolor(url("objects/title-buttons/titlebutton-close.svg")), -gtk-recolor(url("objects/title-buttons/titlebutton-close@2.svg")));
         ,*/  
      }

      headerbar button.titlebutton.close:backdrop,
      .titlebar button.titlebutton.close:backdrop,
      windowcontrols > button.close:backdrop {
          color: rgba(255, 255, 255, 0.7);
          background-color: rgba(119, 119, 119, 1);
      }

      headerbar button.titlebutton.close:hover,
      .titlebar button.titlebutton.close:hover,
      windowcontrols button:hover,
      headerbar button.titlebutton.close:backdrop:hover,
      .titlebar button.titlebutton.close:backdrop:hover,
      windowcontrols button:backdrop:hover {
          color: rgba(31, 31, 31, 0.7);
          background-color: white;
      }

      headerbar button.titlebutton.maximize,
      .titlebar button.titlebutton.maximize,
      windowcontrols > button.maximize {
          color: rgba(31, 31, 31, 1);
          /*
          -gtk-icon-source: -gtk-scaled(-gtk-recolor(url("objects/title-buttons/titlebutton-maximize.svg")), -gtk-recolor(url("objects/title-buttons/titlebutton-maximize@2.svg")));
          ,*/
      }

      headerbar button.titlebutton.maximize:backdrop,
      .titlebar button.titlebutton.maximize:backdrop,
      windowcontrols > button.maximize:backdrop {
          color: rgba(31, 31, 31, 0.7);
      }

      headerbar button.titlebutton.maximize:hover,
      .titlebar button.titlebutton.maximize:hover,
      windowcontrols > button.maximize:hover,
      headerbar button.titlebutton.maximize:backdrop:hover,
      .titlebar button.titlebutton.maximize:backdrop:hover,
      windowcontrols > button.maximize:backdrop:hover {
          color: rgba(31, 31, 31, 1);
          background-color: white;
      }

      headerbar button.titlebutton.minimize,
      .titlebar button.titlebutton.minimize,
      windowcontrols > button.minimize {
          color: rgba(31, 31, 31, 1);
          /*
          -gtk-icon-source: -gtk-scaled(-gtk-recolor(url("objects/title-buttons/titlebutton-minimize.svg")), -gtk-recolor(url("objects/title-buttons/titlebutton-minimize@2.svg")));
          ,*/
      }

      headerbar button.titlebutton.minimize:backdrop,
      .titlebar button.titlebutton.minimize:backdrop,
      windowcontrols > button.minimize:backdrop {
          color: rgba(31, 31, 31, 0.7);
      }

      headerbar button.titlebutton.minimize:hover,
      .titlebar button.titlebutton.minimize:hover,
      windowcontrols > button.minimize:hover,
      headerbar button.titlebutton.minimize:backdrop:hover,
      .titlebar button.titlebutton.minimize:backdrop:hover,
      windowcontrols > button.minimize:backdrop:hover {
          color: rgba(31, 31, 31, 1);
          background-color: white;
      }

      headerbar button.titlebutton.restore,
      .titlebar button.titlebutton.restore,
      windowcontrols > button.restore {
          color: rgba(31, 31, 31, 1);
          /*
          -gtk-icon-source: -gtk-recolor(url("objects/title-buttons/titlebutton-maximize.svg")), -gtk-recolor(url("objects/title-buttons/titlebutton-maximize@2.svg")));
          ,*/
      }

      headerbar button.titlebutton.restore:backdrop,
      .titlebar button.restore:backdrop,
      windowcontrols > button.titlebutton.restore:backdrop {
          color: rgba(31, 31, 31, 0.7);
      }

      headerbar button.titlebutton.restore:hover,
      .titlebar button.titlebutton.restore:hover,
      windowcontrols button.titlebutton.restore:hover,
      headerbar button.titlebutton.restore:backdrop:hover,
      .titlebar button.titlebutton.restore:backdrop:hover,
      windowcontrols button.titlebutton.restore:backdrop:hover {  
          color: rgba(31, 31, 31, 1);
          background-color: white;
      }

#+end_src
**** button.osd
#+begin_src css

  /* button.osd */

  button.osd {
      color: #BAC3CF;
      background-color: rgba(53, 57, 69, 0.95);
      border-color: rgba(35, 38, 46, 0.95);
  }

  button.osd:hover {
      color: @selected_bg_color;
  }

  button.osd:active {
      color: #ffffff;
      text-shadow:  0 -1px alpha(#ffffff, 0.04),
                    -1px  0px alpha(@fg_color, 0.05),
                    1px  0px alpha(@fg_color, 0.05),
                    0px  1px alpha(@fg_color, 0.3),
                    0px  2px alpha(@fg_color, 0.05);
      border-color: rgba(26, 28, 34, 0.35);
      background-color: @selected_bg_color;
  }

  button.osd:checked {
      color: #ffffff;
      text-shadow:  0 -1px alpha(#ffffff, 0.04),
                    -1px  0px alpha(@fg_color, 0.05),
                    1px  0px alpha(@fg_color, 0.05),
                    0px  1px alpha(@fg_color, 0.3),
                    0px  2px alpha(@fg_color, 0.05);
      border-color: rgba(26, 28, 34, 0.35);
      background-color: @selected_bg_color;
  }

  button.osd:disabled {
      color: #5d626e;
      border-color: rgba(26, 28, 34, 0.35);
      background-color: rgba(102, 109, 132, 0.2);
  }

  button.osd.image-button {
      padding: 0;
      min-height: 36px;
      min-width: 36px;
  }
#+end_src
**** button.circular
#+begin_src css

  /* button.circular */

  button.circular,
  button.circular-button,
  menubutton.circular > button {
      padding: 0;
      min-width: 24px;
      min-height: 24px;
      border-radius: 50%;
  }

#+end_src
**** button.suggested-action 
#+begin_src css

  /* button.suggested-action */

  button.suggested-action {
      background-color: @selected_bg_color;
      /* background-image: linear-gradient(to bottom,@selected_bg_color,@selected_bg_color); */
      background-image: none;
      background-clip: border-box;
  }

  button.suggested-action label {
      color: #ffffff;
      text-shadow:  0 -1px alpha(#ffffff, 0.04),
                    -1px  0px alpha(@fg_color, 0.05),
                    1px  0px alpha(@fg_color, 0.05),
                    0px  1px alpha(@fg_color, 0.3),
                    0px  2px alpha(@fg_color, 0.05);
  }

  button.suggested-action:hover {
      color: #ffffff;
      text-shadow:  0 -1px alpha(#ffffff, 0.04),
                    -1px  0px alpha(@fg_color, 0.05),
                    1px  0px alpha(@fg_color, 0.05),
                    0px  1px alpha(@fg_color, 0.3),
                    0px  2px alpha(@fg_color, 0.05);
      border-color: @selected_bg_color;
      background-color: #4b86e0;
      background-image: linear-gradient(to bottom,#4b86e0,#4b86e0);
      background-clip: border-box;
  }

  button.suggested-action:active {
      color: #ffffff;
      text-shadow:  0 -1px alpha(#ffffff, 0.04),
                    -1px  0px alpha(@fg_color, 0.05),
                    1px  0px alpha(@fg_color, 0.05),
                    0px  1px alpha(@fg_color, 0.3),
                    0px  2px alpha(@fg_color, 0.05);
      border-color:  #0277db;
      background-color: @selected_bg_color;
      background-image: linear-gradient(to bottom,@selected_bg_color,@selected_bg_color);
      background-clip: border-box;
  }

  button.suggested-action:checked {
      color: #ffffff;
      text-shadow:  0 -1px alpha(#ffffff, 0.04),
                    -1px  0px alpha(@fg_color, 0.05),
                    1px  0px alpha(@fg_color, 0.05),
                    0px  1px alpha(@fg_color, 0.3),
                    0px  2px alpha(@fg_color, 0.05);
      border-color:  #0277db;
      background-color: @selected_bg_color;
      background-image: linear-gradient(to bottom,@selected_bg_color,@selected_bg_color);
      background-clip: border-box;
  }

  button.suggested-action.flat:disabled {
      border-color: transparent;
      background-color: transparent;
      background-image: none;
      color: rgba(92, 97, 108, 0.55);
  }

  button.suggested-action:disabled {
      color: rgba(92, 97, 108, 0.55);
      border-color: rgba(207, 214, 230, 0.55);
      background-color: rgba(251, 251, 252, 0.55);
      background-image: linear-gradient(to bottom, rgba(251, 251, 252, 0.55),
                                        rgba(251, 251, 252, 0.55));
  }

  button.suggested-action:disabled label {
      color: rgba(92, 97, 108, 0.55);
  }

  button.suggested-action.sidebar-button {
      border-color: transparent;
      background-color: transparent;
      background-image: none;
      color: @fg_color;
  }

  button.suggested-action.sidebar-button:disabled {
      border-color: transparent;
      background-color: transparent;
      background-image: none;
      color: rgba(92, 97, 108, 0.55);
  }
#+end_src
**** button.destructive-action
#+begin_src css

  /* button.destructive-action */

  button.destructive-action {
      background-clip: border-box;
      color: white;
      text-shadow:  0 -1px alpha(#ffffff, 0.04),
                    -1px  0px alpha(@fg_color, 0.05),
                    1px  0px alpha(@fg_color, 0.05),
                    0px  1px alpha(@fg_color, 0.3),
                    0px  2px alpha(@fg_color, 0.05);
      background-color: #F04A50;
      background-image: linear-gradient(to bottom, #F04A50,
                                        #F04A50);
      border-color: #F04A50;
  }

  button.destructive-action:hover {
      background-clip: border-box;
      color: white;
      text-shadow:  0 -1px alpha(#ffffff, 0.04),
                    -1px  0px alpha(@fg_color, 0.05),
                    1px  0px alpha(@fg_color, 0.05),
                    0px  1px alpha(@fg_color, 0.3),
                    0px  2px alpha(@fg_color, 0.05);
      background-color: #f3313a;
      background-image: linear-gradient(to bottom, #f3313a,
                                        #f3313a);
      border-color: #f3313a;
  }

  button.destructive-action:active {
      background-clip: border-box;
      color: white;
      text-shadow:  0 -1px alpha(#ffffff, 0.04),
                    -1px  0px alpha(@fg_color, 0.05),
                    1px  0px alpha(@fg_color, 0.05),
                    0px  1px alpha(@fg_color, 0.3),
                    0px  2px alpha(@fg_color, 0.05);
      background-color: #f3313a;
      background-image: linear-gradient(to bottom, #f3313a,
                                        #f3313a);
      border-color: #f3313a;
  }

  button.destructive-action:checked {
      background-clip: border-box;
      color: white;
      text-shadow:  0 -1px alpha(#ffffff, 0.04),
                    -1px  0px alpha(@fg_color, 0.05),
                    1px  0px alpha(@fg_color, 0.05),
                    0px  1px alpha(@fg_color, 0.3),
                    0px  2px alpha(@fg_color, 0.05);
      background-color: #f3313a;
      background-image: linear-gradient(to bottom, #f3313a,
                                        #f3313a);
      border-color: #f3313a;
  }

  button.destructive-action:disabled {
      color: rgba(92, 97, 108, 0.55);
      background-clip: border-box;
      background-color: #e3bebf;
      background-image: linear-gradient(to bottom,#e3bebf,
                                        #e3bebf);
      border-color: #e3bebf;
  }

  button.destructive-action.flat {
      border-color: transparent;
      background-color: transparent;
      background-image: none;
      color: #F04A50;
  }

  button.destructive-action.flat:disabled {
      border-color: transparent;
      background-color: transparent;
      background-image: none;
      color: rgba(92, 97, 108, 0.55);
  }

  button.destructive-action:disabled label {
      color: rgba(92, 97, 108, 0.55);
  }

  button.destructive-action.sidebar-button {
      border-color: transparent;
      background-color: transparent;
      background-image: none;
      color: #F04A50;
  }

  button.destructive-action.sidebar-button:disabled {
      border-color: transparent;
      background-color: transparent;
      background-image: none;
      color: rgba(92, 97, 108, 0.55);
  }
#+end_src
*** check
A GtkCheckButton places a label next to an indicator

checkbutton[.text-button][.grouped]
├── check
╰── [label]
[[https://docs.gtk.org/gtk4/class.CheckButton.html][link]]

#+begin_src css

  /*************************************************/
  /*                CHECK BUTTON                   */
  /*************************************************/

  checkbutton.text-button {
      padding: 2px 0;
  }

  /** Unchecked **/
  check {
      min-width: 16px;
      min-height: 16px;
      margin: 0 2px;
      background-color: transparent;
      -gtk-icon-source: -gtk-scaled(url("objects/checkbox-objects/checkbox-unchecked.svg"), url("objects/checkbox-objects/checkbox-unchecked@2.svg"));
  }

  check:selected {
      background-color: transparent;  /* Override the default */
  }

  check:selected,
  selection check {
      -gtk-icon-source: -gtk-scaled(url("objects/checkbox-objects/checkbox-unchecked-selected.svg"), url("objects/checkbox-objects/checkbox-unchecked-selected@2.svg"));
  }

  check:disabled {
      -gtk-icon-source: -gtk-scaled(url("objects/checkbox-objects/checkbox-unchecked-insensitive.svg"), url("objects/checkbox-objects/checkbox-unchecked-insensitive@2.svg"));
  }

  selection check:disabled {
      -gtk-icon-source: -gtk-scaled(url("objects/checkbox-objects/checkbox-unchecked-insensitive-selected.svg"), url("objects/checkbox-objects/checkbox-unchecked-insensitive-selected@2.svg"));
  }

  /** Checked **/
  check:checked {
      -gtk-icon-source: -gtk-scaled(url("objects/checkbox-objects/checkbox-checked.svg"), url("objects/checkbox-objects/checkbox-checked@2.svg"));
  }

  check:checked:selected,
  selection check:checked {
      -gtk-icon-source: -gtk-scaled(url("objects/checkbox-objects/checkbox-checked-selectionmode.svg"), url("objects/checkbox-objects/checkbox-checked-selectionmode@2.svg"));
  }

  check:checked:disabled {
      -gtk-icon-source: -gtk-scaled(url("objects/checkbox-objects/checkbox-checked-insensitive.svg"), url("objects/checkbox-objects/checkbox-checked-insensitive@2.svg"));
  }

  check:checked:disabled:selected,  
  selection check:checked:disabled {
      -gtk-icon-source: -gtk-scaled(url("objects/checkbox-objects/checkbox-checked-insensitive-selected.svg"), url("objects/checkbox-objects/checkbox-checked-insensitive-selected@2.svg"));
  }

  /** Indeterminate **/  
  check:indeterminate {
      -gtk-icon-source: -gtk-scaled(url("objects/checkbox-objects/checkbox-mixed.svg"), url("objects/checkbox-objects/checkbox-mixed@2.svg"));
  }

  check:indeterminate:selected,
  selection check:indeterminate {
      -gtk-icon-source: -gtk-scaled(url("objects/checkbox-objects/checkbox-mixed-selected.svg"), url("objects/checkbox-objects/checkbox-mixed-selected@2.svg"));
  }

  check:indeterminate:disabled {
      -gtk-icon-source: -gtk-scaled(url("objects/checkbox-objects/checkbox-mixed-insensitive.svg"), url("objects/checkbox-objects/checkbox-mixed-insensitive@2.svg"));
  }

  check:indeterminate:disabled:selected,
  selection check:indeterminate:disabled {
      -gtk-icon-source: -gtk-scaled(url("objects/checkbox-objects/checkbox-mixed-insensitive-selected.svg"), url("objects/checkbox-objects/checkbox-mixed-insensitive-selected@2.svg"));
  }

  checkbutton label:not(:only-child):first-child {
      margin-left: 4px;
  }

  checkbutton label:not(:only-child):last-child {
      margin-right: 4px;
  }
#+end_src
**** check selected
#+begin_src css

  /* CHECK  SELECTED */

  list > row:selected check,
  list > row:focus check,
  menuitem > check:hover,
  modelbutton > check:hover {
      -gtk-icon-source: -gtk-scaled(url("objects/checkbox-objects/checkbox-unchecked-selected.svg"), url("objects/checkbox-objects/checkbox-unchecked-selected@2.svg"));
  }

  list > row:selected check:checked,
  list > row:focus check:checked,
  menuitem > check:checked:hover,
  modelbutton > check:checked:hover {
      -gtk-icon-source: -gtk-scaled(url("objects/checkbox-objects/checkbox-checked-selectionmode.svg"), url("objects/checkbox-objects/checkbox-checked-selectionmode@2.svg"));
  }

  list > row:selected check:checked:disabled:selected,
  list > row:focus check:checked:disabled:selected,
  menuitem > check:checked:disabled:selected:hover,
  modelbutton > check:checked:disabled:selected:hover {
      -gtk-icon-source: -gtk-scaled(url("objects/checkbox-objects/checkbox-checked-insensitive-selected.svg"), url("objects/checkbox-objects/checkbox-checked-insensitive-selected@2.svg"));
  }

  list > row:selected check:indeterminate,
  list > row:focus check:indeterminate,
  menuitem > check:indeterminate:hover,
  modelbutton > check:indeterminate:hover {
      -gtk-icon-source: -gtk-scaled(url("objects/checkbox-objects/checkbox-mixed-selected.svg"), url("objects/checkbox-objects/checkbox-mixed-selected@2.svg"));
  }

  list > row:selected check:indeterminate:disabled,
  list > row:focus check:indeterminate:disabled,
  menuitem > check:indeterminate:disabled:hover,
  modelbutton > check:indeterminate:disabled:hover {
      -gtk-icon-source: -gtk-scaled(url("objects/checkbox-objects/checkbox-mixed-insensitive-selected.svg"), url("objects/checkbox-objects/checkbox-mixed-insensitive-selected@2.svg"));
  }
#+end_src
*** radio
A GtkRadioButton *with* indicator (see gtk_toggle_button_set_mode()) has a main CSS node with name radiobutton and a subnode with name radio.

radiobutton
├── radio
╰── <child>

A GtkRadioButton *without* indicator changes the name of its main node to button and adds a .radio style class to it. The subnode is invisible in this case.

button.radio
├── radio
╰── <child>
[[https://docs.gtk.org/gtk3/class.RadioButton.html][link]]

#+begin_src css

  /*************************************************/
  /*                RADIO BUTTON                   */
  /*************************************************/

  radiobutton.text-button {
      padding: 2px 0;
  }

  /** Unchecked **/
  radio {
      min-width: 16px;
      min-height: 16px;
      margin: 0 2px;
      border-style: none;
      -gtk-icon-source: -gtk-scaled(url("objects/radio-objects/radio-unchecked.svg"), url("objects/radio-objects/radio-unchecked@2.svg"));
  }

  radio:selected,
  radio:selected:hover {
      background-color: transparent;  /* Override the default */
  }

  radio:selected:hover,
  selection radio {
      -gtk-icon-source: -gtk-scaled(url("objects/radio-objects/radio-unchecked-selected.svg"), url("objects/radio-objects/radio-unchecked-selected@2.svg"));
  }

  radio:disabled {
      -gtk-icon-source: -gtk-scaled(url("objects/radio-objects/radio-unchecked-insensitive.svg"), url("objects/radio-objects/radio-unchecked-insensitive@2.svg"));
  }

  radio:disabled:selected:hover,
  selection radio:disabled {
      -gtk-icon-source: -gtk-scaled(url("objects/radio-objects/radio-unchecked-insensitive.svg"), url("objects/radio-objects/radio-unchecked-insensitive@2.svg"));
  }

  /** Checked **/
  radio:checked {
      -gtk-icon-source: -gtk-scaled(url("objects/radio-objects/radio-checked.svg"), url("objects/radio-objects/radio-checked@2.svg"));
  }

  radio:checked:selected:hover,
  selection check:checked {
      -gtk-icon-source: -gtk-scaled(url("objects/radio-objects/radio-checked-selected.svg"), url("objects/radio-objects/radio-checked-selected@2.svg"));
  }

  radio:checked:disabled {
      -gtk-icon-source: -gtk-scaled(url("objects/radio-objects/radio-checked-insensitive.svg"), url("objects/radio-objects/radio-checked-insensitive@2.svg"));
  }

  radio:checked:disabled:selected:hover {
      -gtk-icon-source: -gtk-scaled(url("objects/radio-objects/radio-checked-insensitive-selected.svg"), url("objects/radio-objects/radio-checked-insensitive-selected@2.svg"));
  }

  /** Indeterminate **/  
  radio:indeterminate {
      -gtk-icon-source: -gtk-scaled(url("objects/radio-objects/radio-mixed.svg"), url("objects/radio-objects/radio-mixed@2.svg"));
  }

  radio:indeterminate:selected:hover,
  selection radio:indeterminate {
      -gtk-icon-source: -gtk-scaled(url("objects/radio-objects/radio-mixed-selected.svg"), url("objects/radio-objects/radio-mixed-selected@2.svg"));
  }

  radio:indeterminate:disabled {
      -gtk-icon-source: -gtk-scaled(url("objects/radio-objects/radio-mixed-insensitive.svg"), url("objects/radio-objects/radio-mixed-insensitive@2.svg"));
  }

  radio:indeterminate:disabled:selected:hover {
      -gtk-icon-source: -gtk-scaled(url("objects/radio-objects/radio-mixed-insensitive-selected.svg"), url("objects/radio-objects/radio-mixed-insensitive-selected@2.svg"));
  }

  radio:only-child {
      margin: 0;
  }

  radiobutton label:not(:only-child):first-child {
      margin-left: 4px;
  }

  radiobutton label:not(:only-child):last-child {
      margin-right: 4px;
  }  
#+end_src
**** radio selected
#+begin_src css

  /* RADIO  SELECTED */

  list > row:selected radio,
  list > row:focus radio,
  menuitem > radio:hover,
  modelbutton > radio:hover {
      -gtk-icon-source: -gtk-scaled(url("objects/radio-objects/radio-unchecked-selected.svg"), url("objects/radio-objects/radio-unchecked-selected@2.svg"));
  }

  list > row:selected radio:disabled,
  list > row:focus radio:disabled,
  menuitem > radio:disabled:hover,
  modelbutton > radio:disabled:hover {
      -gtk-icon-source: -gtk-scaled(url("objects/radio-objects/radio-unchecked-insensitive.svg"), url("objects/radio-objects/radio-unchecked-insensitive@2.svg"));
  }        

  list > row:selected radio:checked,
  list > row:focus radio:checked,
  menuitem > radio:checked:hover,
  modelbutton > radio:checked:hover {
      -gtk-icon-source: -gtk-scaled(url("objects/radio-objects/radio-checked-selected.svg"), url("objects/radio-objects/radio-checked-selected@2.svg"));
  }

  list > row:selected radio:checked:disabled,
  list > row:focus radio:checked:disabled,
  menuitem > radio:checked:disabled:hover,
  modelbutton > radio:checked:disabled:hover {
      -gtk-icon-source: -gtk-scaled(url("objects/radio-objects/radio-checked-insensitive-selected.svg"), url("objects/radio-objects/radio-checked-insensitive-selected@2.svg"));
  }

  list > row:selected radio:indeterminate,
  list > row:focus radio:indeterminate,
  menuitem > radio:indeterminate:hover, 
  modelbutton > radio:indeterminate:hover {
      -gtk-icon-source: -gtk-scaled(url("objects/radio-objects/radio-mixed-selected.svg"), url("objects/radio-objects/radio-mixed-selected@2.svg"));
  }

  list > row:selected radio:indeterminate:disabled,
  list > row:focus radio:indeterminate:disabled,
  menuitem > radio:indeterminate:disabled:hover,
  modelbutton > radio:indeterminate:disabled:hover {
      -gtk-icon-source: -gtk-scaled(url("objects/radio-objects/radio-mixed-insensitive-selected.svg"), url("objects/radio-objects/radio-mixed-insensitive-selected@2.svg"));
  }

#+end_src
*** spinbutton
Widget that has an entry with plus/minux button

spinbutton.horizontal
├── text
│    ├── undershoot.left
│    ╰── undershoot.right
├── button.down
╰── button.up

spinbutton.vertical
├── button.up
├── text
│    ├── undershoot.left
│    ╰── undershoot.right
╰── button.down

#+begin_src css

  /*************************************************/
  /*                SPINBUTTON                     */
  /*************************************************/

  spinbutton:drop(active) > entry {
      border-color: #F08437;
  }

  spinbutton:disabled {
      color: rgba(92, 97, 108, 0.55);
  }

  spinbutton > button {
      font-weight: normal;
      border-radius: 0px;
      border-color: @border_color;
  }

  spinbutton > button:active {
      color: #ffffff;
      text-shadow:  0 -1px alpha(#ffffff, 0.04),
                    -1px  0px alpha(@fg_color, 0.05),
                    1px  0px alpha(@fg_color, 0.05),
                    0px  1px alpha(@fg_color, 0.3),
                    0px  2px alpha(@fg_color, 0.05);
  }

  spinbutton > text {
      background-color: @base_color;
  }

  spinbutton.horizontal > text {
      min-width: 28px;
      padding: 0px 4px;
      border: 1px solid @border_color;
      border-right-width: 0px;
      border-top-left-radius: 4px;
      border-bottom-left-radius: 4px;
  }

  spinbutton.horizontal > button.down {
      border-radius: 0px;
  }

  spinbutton.horizontal > button.up {
      border-top-right-radius: 4px;
      border-bottom-right-radius: 4px;
      border-left-width: 0px;
  }

  spinbutton.vertical > button.up {
      border-top-left-radius: 4px;
      border-top-right-radius: 4px;
  }

  spinbutton.vertical > text {
      border-radius: 0;
      border-left: 1px solid @border_color;
      border-right: 1px solid @border_color;
      padding: 4px;
  }

  spinbutton.vertical > button.down {
      border-bottom-left-radius: 4px;
      border-bottom-right-radius: 4px;
  }  
#+end_src
*** menubutton
The GtkMenuButton widget is used to display a popup when clicked.
The CSS is expected to provide a suitable image for each of these cases using the -gtk-icon-source property.

menubutton
╰── button.toggle
╰── <content>
╰── [arrow]
[[https://docs.gtk.org/gtk4/class.MenuButton.html][link]]

#+begin_src css

  /*************************************************/
  /*                 MENU BUTTON                   */
  /*************************************************/

  menubutton {
      -gtk-icon-source: -gtk-icontheme("open-menu-symbolic");
      margin: 0px 10px;
  }

  menubutton > button.toggle {
      min-height: 24px;
      min-width: 24px;
      padding: 3px;
  }

  menubutton > popover {
      margin-top: 3px;
  }

  menubutton > button > box {
      border-spacing: 6px;
  }

  menubutton arrow {
      min-height: 16px;
      min-width: 16px;
  }

  menubutton arrow.none {
      -gtk-icon-source: -gtk-icontheme("open-menu-symbolic");
  }

  menubutton arrow.down {
      -gtk-icon-source: -gtk-icontheme("pan-down-symbolic");
  }

  menubutton arrow.up {
      -gtk-icon-source: -gtk-icontheme("pan-up-symbolic");
  }

  menubutton arrow.left {
      -gtk-icon-source: -gtk-icontheme("pan-start-symbolic");
  }
  
  menubutton arrow.right {
      -gtk-icon-source: -gtk-icontheme("pan-end-symbolic");
  }  
#+end_src
*** sidebar button
#+begin_src css
  
  /* button.sidebar-button */

  button.sidebar-button {
      color: rgba(37,37,37,0.55);
      border-radius: 5px;
      border-right-color: rgba(0,0,0,0.12);
      border-left-color: rgba(0,0,0,0.12);
      border-bottom-color: rgba(0, 0, 0, 0.18);
      border-top-color: rgba(0, 0, 0, 0.08);
      background-color: transparent;
      background-image: linear-gradient(to bottom,rgba(255,255,255,1),
                                        rgba(255,255,255,1));
  }

  button.sidebar-button:hover {
      /*
    transition: all 200ms cubic-bezier(0.25, 0.46, 0.45, 0.94);
    transition-duration: 350ms;
     ,*/
  }

  button.sidebar-button:hover:active {
      /*transition: all 200ms cubic-bezier(0.25, 0.46, 0.45, 0.94); */ }

  button.sidebar-button:disabled {
      border-color: transparent;
      background-color: transparent;
      background-image: none;
  }
#+end_src
*** osd button
#+begin_src css

  /* button.osd */

  button.osd {
      color: #BAC3CF;
      background-color: rgba(53, 57, 69, 0.95);
      border-color: rgba(35, 38, 46, 0.95);
  }

  button.osd:hover {
      color: @selected_bg_color;
  }

  button.osd:active {
      color: #ffffff;
      text-shadow:  0 -1px alpha(#ffffff, 0.04),
                    -1px  0px alpha(@fg_color, 0.05),
                    1px  0px alpha(@fg_color, 0.05),
                    0px  1px alpha(@fg_color, 0.3),
                    0px  2px alpha(@fg_color, 0.05);
      border-color: rgba(26, 28, 34, 0.35);
      background-color: @selected_bg_color;
  }

  button.osd:checked {
      color: #ffffff;
      text-shadow:  0 -1px alpha(#ffffff, 0.04),
                    -1px  0px alpha(@fg_color, 0.05),
                    1px  0px alpha(@fg_color, 0.05),
                    0px  1px alpha(@fg_color, 0.3),
                    0px  2px alpha(@fg_color, 0.05);
      border-color: rgba(26, 28, 34, 0.35);
      background-color: @selected_bg_color;
  }

  button.osd:disabled {
      color: #5d626e;
      border-color: rgba(26, 28, 34, 0.35);
      background-color: rgba(102, 109, 132, 0.2);
  }

  button.osd.image-button {
      padding: 0;
      min-height: 36px;
      min-width: 36px;
  }
#+end_src
*** suggested-action button
#+begin_src css

  /* button.suggested-action */

  button.suggested-action {
      color: #ffffff;
      text-shadow:  0 -1px alpha(#ffffff, 0.04),
                    -1px  0px alpha(@fg_color, 0.05),
                    1px  0px alpha(@fg_color, 0.05),
                    0px  1px alpha(@fg_color, 0.3),
                    0px  2px alpha(@fg_color, 0.05);
      border-color: #0277db;
      background-color: transparent;
      background-image: linear-gradient(to bottom,@selected_bg_color,@selected_bg_color);
      background-clip: border-box;
  }

  button.suggested-action.flat {
      border-color: transparent;
      background-color: transparent;
      background-image: none;
      color: @fg_color;
  }

  button.suggested-action:hover {
      color: #ffffff;
      text-shadow:  0 -1px alpha(#ffffff, 0.04),
                    -1px  0px alpha(@fg_color, 0.05),
                    1px  0px alpha(@fg_color, 0.05),
                    0px  1px alpha(@fg_color, 0.3),
                    0px  2px alpha(@fg_color, 0.05);
      border-color: @selected_bg_color;
      background-color: #4b86e0;
      background-image: linear-gradient(to bottom,#4b86e0,#4b86e0);
      background-clip: border-box;
  }

  button.suggested-action:active {
      color: #ffffff;
      text-shadow:  0 -1px alpha(#ffffff, 0.04),
                    -1px  0px alpha(@fg_color, 0.05),
                    1px  0px alpha(@fg_color, 0.05),
                    0px  1px alpha(@fg_color, 0.3),
                    0px  2px alpha(@fg_color, 0.05);
      border-color:  #0277db;
      background-color: @selected_bg_color;
      background-image: linear-gradient(to bottom,@selected_bg_color,@selected_bg_color);
      background-clip: border-box;
  }

  button.suggested-action:checked {
      color: #ffffff;
      text-shadow:  0 -1px alpha(#ffffff, 0.04),
                    -1px  0px alpha(@fg_color, 0.05),
                    1px  0px alpha(@fg_color, 0.05),
                    0px  1px alpha(@fg_color, 0.3),
                    0px  2px alpha(@fg_color, 0.05);
      border-color:  #0277db;
      background-color: @selected_bg_color;
      background-image: linear-gradient(to bottom,@selected_bg_color,@selected_bg_color);
      background-clip: border-box;
  }

  button.suggested-action.flat:disabled {
      border-color: transparent;
      background-color: transparent;
      background-image: none;
      color: rgba(92, 97, 108, 0.55);
  }

  button.suggested-action:disabled {
      color: rgba(92, 97, 108, 0.55);
      border-color: rgba(207, 214, 230, 0.55);
      background-color: rgba(251, 251, 252, 0.55);
      background-image: linear-gradient(to bottom, rgba(251, 251, 252, 0.55),
                                        rgba(251, 251, 252, 0.55));
  }

  button.suggested-action:disabled label {
      color: rgba(92, 97, 108, 0.55);
  }

  button.suggested-action.sidebar-button {
      border-color: transparent;
      background-color: transparent;
      background-image: none;
      color: @fg_color;
  }

  button.suggested-action.sidebar-button:disabled {
      border-color: transparent;
      background-color: transparent;
      background-image: none;
      color: rgba(92, 97, 108, 0.55);
  }
#+end_src
*** destructive-action button
#+begin_src css

  /* button.destructive-action */

  button.destructive-action {
      background-clip: border-box;
      color: white;
      text-shadow:  0 -1px alpha(#ffffff, 0.04),
                    -1px  0px alpha(@fg_color, 0.05),
                    1px  0px alpha(@fg_color, 0.05),
                    0px  1px alpha(@fg_color, 0.3),
                    0px  2px alpha(@fg_color, 0.05);
      background-color: #F04A50;
      background-image: linear-gradient(to bottom, #F04A50,
                                        #F04A50);
      border-color: #F04A50;
  }

  button.destructive-action:hover {
      background-clip: border-box;
      color: white;
      text-shadow:  0 -1px alpha(#ffffff, 0.04),
                    -1px  0px alpha(@fg_color, 0.05),
                    1px  0px alpha(@fg_color, 0.05),
                    0px  1px alpha(@fg_color, 0.3),
                    0px  2px alpha(@fg_color, 0.05);
      background-color: #f3313a;
      background-image: linear-gradient(to bottom, #f3313a,
                                        #f3313a);
      border-color: #f3313a;
  }

  button.destructive-action:active {
      background-clip: border-box;
      color: white;
      text-shadow:  0 -1px alpha(#ffffff, 0.04),
                    -1px  0px alpha(@fg_color, 0.05),
                    1px  0px alpha(@fg_color, 0.05),
                    0px  1px alpha(@fg_color, 0.3),
                    0px  2px alpha(@fg_color, 0.05);
      background-color: #f3313a;
      background-image: linear-gradient(to bottom, #f3313a,
                                        #f3313a);
      border-color: #f3313a;
  }

  button.destructive-action:checked {
      background-clip: border-box;
      color: white;
      text-shadow:  0 -1px alpha(#ffffff, 0.04),
                    -1px  0px alpha(@fg_color, 0.05),
                    1px  0px alpha(@fg_color, 0.05),
                    0px  1px alpha(@fg_color, 0.3),
                    0px  2px alpha(@fg_color, 0.05);
      background-color: #f3313a;
      background-image: linear-gradient(to bottom, #f3313a,
                                        #f3313a);
      border-color: #f3313a;
  }

  button.destructive-action:disabled {
      color: rgba(92, 97, 108, 0.55);
      background-clip: border-box;
      background-color: #e3bebf;
      background-image: linear-gradient(to bottom,#e3bebf,
                                        #e3bebf);
      border-color: #e3bebf;
  }

  button.destructive-action.flat {
      border-color: transparent;
      background-color: transparent;
      background-image: none;
      color: #F04A50;
  }

  button.destructive-action.flat:disabled {
      border-color: transparent;
      background-color: transparent;
      background-image: none;
      color: rgba(92, 97, 108, 0.55);
  }

  button.destructive-action:disabled label {
      color: rgba(92, 97, 108, 0.55);
  }

  button.destructive-action.sidebar-button {
      border-color: transparent;
      background-color: transparent;
      background-image: none;
      color: #F04A50;
  }

  button.destructive-action.sidebar-button:disabled {
      border-color: transparent;
      background-color: transparent;
      background-image: none;
      color: rgba(92, 97, 108, 0.55);
  }
#+end_src
** arrow
#+begin_src css

  /*************************************************/
  /*                    ARROW                      */
  /*************************************************/

  arrow {
      min-height: 16px;
      min-width: 16px;
  }

  arrow:dir(ltr) {
      -gtk-icon-source: -gtk-icontheme("pan-end-symbolic");
      margin-left: 10px;
  }

  arrow:dir(rtl) {
      -gtk-icon-source: -gtk-icontheme("pan-end-symbolic-rtl");
      margin-right: 10px;
  }

#+end_src
*** arrow selected
#+begin_src css

  /* ARROW  SELECTED */

  menuitem > arrow:hover,
  modelbutton > arrow:hover {
      color: @selected_fg_color;
  }

#+end_src
** entry
A single line text entry widget.

entry[.flat][.warning][.error]
├── text[.readonly]
├── image.left
├── image.right
╰── [progress[.pulse]]
[[https://docs.gtk.org/gtk4/class.Entry.html][link]]

#+begin_src css

  /*************************************************/
  /*                    ENTRY                      */
  /*************************************************/

  entry {
      min-height: 24px;
      padding: 2px 8px;
      caret-color: currentColor;
      border-radius: 4px;
      /*transition: all 200ms cubic-bezier(0.25, 0.46, 0.45, 0.94);*/
      border: 1px solid @border_color;
      background-color: white;
  }

  entry.flat {
      min-height: 0;
      padding: 2px;
  }

  entry.flat:focus {
      min-height: 0;
      padding: 2px;
      background-image: none;
  }

  entry:focus {
      color: @text_color;
  }

  entry.warning {
      color: white;
      text-shadow:  0 -1px alpha(#ffffff, 0.04),
                    -1px  0px alpha(@fg_color, 0.05),
                    1px  0px alpha(@fg_color, 0.05),
                    0px  1px alpha(@fg_color, 0.3),
                    0px  2px alpha(@fg_color, 0.05);
      border-color: #F27835;
      background-color: #f7ae86;
      /* background-image: linear-gradient(to bottom, #f7ae86, #f7ae86) */
  }

  entry.warning:focus {
      background-color: #F27835;
      box-shadow: none;
  }

  entry.error,
  entry.search-missing {
      color: white;
      text-shadow:  0 -1px alpha(#ffffff, 0.04),
                    -1px  0px alpha(@fg_color, 0.05),
                    1px  0px alpha(@fg_color, 0.05),
                    0px  1px alpha(@fg_color, 0.3),
                    0px  2px alpha(@fg_color, 0.05);
      border-color: #FC4138;
      /* background-image: linear-gradient(to bottom, #fd8d88, #fd8d88); */
      background-color: #fd8d88;
  }

  entry.error:focus,
  entry.search-missing:focus {
      background-color: #FC4138;
      box-shadow: none;
  }

  entry:drop(active) {
      border-color: #F08437;
      box-shadow: none;
  }

  entry image {
      color: #515151;
  }

  entry image.left {
      padding-left: 0;
      padding-right: 5px;
  }

  entry image.right {
      padding-right: 0;
      padding-left: 5px;
  }

  entry progress {
      margin: 0 -6px;
      border-radius: 0;
      border-width: 0 0 2px;
      border-color: @selected_bg_color;
      border-style: solid;
      background-image: none;
      background-color: transparent;
  }
#+end_src
** combobox
Widget that allows the user to choose from a list of valid choices.

combobox
├── box.linked
│   ╰── button.combo
│       ╰── box
│           ├── cellview
│           ╰── arrow
╰── window.popup

combobox
├── box.linked
│   ├── entry.combo
│   ╰── button.combo
│       ╰── box
│           ╰── arrow
╰── window.popup
[[https://docs.gtk.org/gtk4/class.ComboBox.html][link]]

#+begin_src css

  /******************************************************/
  /*                    COMBOBOX                        */
  /******************************************************/

  combobox entry.combo:dir(ltr) {
      /* Below is to make 'entry+button' look like a combobox. but more side-effects
        box.linked.horizontal:not(.path-bar):dir(ltr) > entry:not(only-child) {
     ,*/
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
      border-right-style: none;
  }

  combobox entry.combo:dir(rtl) {
      /* box.linked.horizontal:not(.path-bar):dir(rtl) > entry:not(only-child) { */
      border-top-left-radius: 0;
      border-bottom-left-radius: 0;
      border-left-style: none;
  }

  combobox button.combo {
      min-height: 0px;
      min-width: 0px;
      padding-left: 6px;
      padding-right: 6px;
      padding-top: 3px;
      padding-bottom:3px;
  }

  /* For the combobox with an entry, remove button's left/right radius. */
  combobox entry.combo:dir(ltr) + button.combo,
  box.linked.horizontal:not(.path-bar) > entry:dir(ltr) + button {
      border-top-left-radius: 0;
      border-bottom-left-radius: 0;
  }

  combobox entry.combo:dir(rtl) + button.combo,
  box.linked.horizontal:not(.path-bar) > entry:dir(rtl) + button {
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
  }

  combobox button arrow:dir(ltr),
  combobox button arrow:dir(rtl) {
      -gtk-icon-source: -gtk-icontheme("pan-down-symbolic");
      min-height: 16px;
      min-width: 16px;
  }
#+end_src
** switch
A “light switch” that has two states: on or off.
GtkSwitch has four css nodes, the main node with the name switch and subnodes for the slider and the on and off images.

switch
├── image
├── image
╰── slider
[[https://docs.gtk.org/gtk4/class.Switch.html][link]]

#+begin_src css

  /*************************************************/
  /*                    SWITCH                     */
  /*************************************************/

  switch {
      transition: all 0.3s cubic-bezier(0, 0, 0.2, 1);
      min-width: 16px;
      min-height: 16px;
      border-radius:100px;
      background-color: shade(@base_color, 0.7);      
      /* background-color: alpha(currentColor, 0.3); */
      background-clip: padding-box;
      font-size: 0;
  }

  switch:disabled {
      color: alpha(currentColor, 0.4);
  }

  switch:checked {
      background-color: @selected_bg_color;
  }

  switch slider {
      transition: all 0.3s cubic-bezier(0, 0, 0.2, 1), box-shadow 0.2s cubic-bezier(0, 0, 0.2, 1);
      border-image: none;
      box-shadow: 0 1px 1px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);
      background-color: #fcfcfc;
      color: rgba(0, 0, 0, 0.1);
      transition: all 0.3s cubic-bezier(0, 0, 0.2, 1), box-shadow 0.2s cubic-bezier(0, 0, 0.2, 1), margin 0;
      min-width: 16px;
      min-height: 16px;
      margin: 2px 0 2px 3px;
      border-radius: 100px;
  }

  switch:hover slider {
      border-image: none;
      box-shadow: 0 3px 3px rgba(0, 0, 0, 0.16), 0 3px 3px rgba(0, 0, 0, 0.23);
  }

  switch:checked slider {
      animation: needs_attention 0.3s cubic-bezier(0, 0, 0.2, 1);
      margin: 2px 3px 2px 0;
      background-color: #FFFFFF;
      color: #71c837;
  }

  switch:disabled slider {
      animation: none;
      box-shadow: 0 1px 1px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);
      background-color: #ffffff;
  }
#+end_src
*** switch selected
#+begin_src css

  /* SWITCH SELECTED */

  list > row:selected switch:checked,
  list > row:focus switch:checked,
  modelbutton:hover switch {
      background-color: shade(@selected_bg_color, 1.4);
  }

#+end_src
** scale
A slider control used to select a numeric value.

scale[.fine-tune][.marks-before][.marks-after]
├── [value][.top][.right][.bottom][.left]
├── marks.top
│   ├── mark
│   ┊    ├── [label]
│   ┊    ╰── indicator
┊   ┊
│   ╰── mark
├── marks.bottom
│   ├── mark
│   ┊    ├── indicator
│   ┊    ╰── [label]
┊   ┊
│   ╰── mark
╰── trough
├── [fill]
├── [highlight]
╰── slider
[[https://docs.gtk.org/gtk4/class.Scale.html][link]]
    
#+begin_src css

  /*************************************************/
  /*                   SCALE                       */
  /*************************************************/

  scale {
      min-height: 22px;
      min-width: 15px;
      padding: 1px;
  }

  scale.horizontal trough {
      padding: 0 4px;
  }

  scale.horizontal highlight,
  scale.horizontal fill {
      margin: 0 -4px;
  }

  scale.vertical trough {
      padding: 4px 0;
  }

  scale.vertical highlight,
  scale.vertical fill {
      margin: -4px 0;
  }

  scale slider {
      min-height: 14px;
      min-width: 14px;
      margin: -6px;
  }

  scale.fine-tune slider {
      margin: -4px;
  }

  scale.fine-tune fill,
  scale.fine-tune highlight,
  scale.fine-tune trough {
      border-radius: 5px;
  }

  scale trough {
      border-radius: 1.5px;
      background-color: shade(@base_color, 0.75);
  }

  scale fill {
      border-radius: 1.5px;
      background-color: rgba(82, 148, 226, 0.5);
  }

  scale fill:disabled {
      background-color: transparent;
  }

  scale highlight {
      border-radius: 2.5px;
      background-color: @selected_bg_color;
  }

  scale highlight:disabled {
      background-color: @selected_bg_dark;
  }

  scale slider {
      background-color: #f6f8fa;
      border: 1px solid #646772;
      border-radius: 100%;
  }

  scale slider:active {
      background-clip: border-box;
      border-color: #646772;
  }

  scale.marks-after slider,
  scale.marks-after slider:focus,
  scale.marks-before slider,
  scale.marks-before slider:focus {
      background-color: transparent;
      border: none;
      border-radius: 0;
      transition: none;
      box-shadow: none;
      margin: -8px;
      min-width: 22px;
      min-height: 22px;
  }

  scale.marks-after.horizontal slider {
      background-image: -gtk-scaled(url("objects/scale-slider-marks/after-horizontal.svg"), url("objects/after-horizontal@2.svg"));
  }

  scale.marks-after.horizontal slider:active {
      background-image: -gtk-scaled(url("objects/scale-slider-marks/after-horizontal-active.svg"), url("objects/scale-slider-marks/after-horizontal-active@2.svg"));
  }

  scale.marks-after.horizontal slider:focus {
      background-image: -gtk-scaled(url("objects/scale-slider-marks/after-horizontal.svg"), url("objects/scale-slider-marks/after-horizontal@2.svg"));
  }

  scale.marks-after.horizontal slider:focus:active {
      background-image: -gtk-scaled(url("objects/scale-slider-marks/after-horizontal-active.svg"), url("objects/scale-slider-marks/after-horizontal-active@2.svg"));
  }

  scale.marks-after.horizontal slider:disabled {
      background-image: -gtk-scaled(url("objects/scale-slider-marks/after-horizontal-insensitive.svg"), url("objects/scale-slider-marks/after-horizontal-insensitive@2.svg"));
  }

  scale.marks-after.vertical slider {
      background-image: -gtk-scaled(url("objects/scale-slider-marks/after-vertical.svg"), url("objects/scale-slider-marks/after-vertical@2.svg"));
  }

  scale.marks-after.vertical slider:active {
      background-image: -gtk-scaled(url("objects/scale-slider-marks/after-vertical-active.svg"), url("objects/scale-slider-marks/after-vertical-active@2.svg"));
  }

  scale.marks-after.vertical slider:focus {
      background-image: -gtk-scaled(url("objects/scale-slider-marks/after-vertical.svg"), url("objects/scale-slider-marks/after-vertical@2.svg"));
  }

  scale.marks-after.vertical slider:focus:active {
      background-image: -gtk-scaled(url("objects/scale-slider-marks/after-vertical-active.svg"), url("objects/scale-slider-marks/after-vertical-active@2.svg"));
  }

  scale.marks-after.vertical slider:disabled {
      background-image: -gtk-scaled(url("objects/scale-slider-marks/after-vertical-insensitive.svg"), url("objects/scale-slider-marks/after-vertical-insensitive@2.svg"));
  }

  scale.marks-before.horizontal slider {
      background-image: -gtk-scaled(url("objects/scale-slider-marks/before-horizontal.svg"), url("objects/scale-slider-marks/before-horizontal@2.svg"));
  }

  scale.marks-before.horizontal slider:active {
      background-image: -gtk-scaled(url("objects/scale-slider-marks/before-horizontal-active.svg"), url("objects/scale-slider-marks/before-horizontal-active@2.svg"));
  }

  scale.marks-before.horizontal slider:focus {
      background-image: -gtk-scaled(url("objects/scale-slider-marks/before-horizontal.svg"), url("objects/scale-slider-marks/before-horizontal@2.svg"));
  }

  scale.marks-before.horizontal slider:focus:active {
      background-image: -gtk-scaled(url("objects/scale-slider-marks/before-horizontal-active.svg"), url("objects/scale-slider-marks/before-horizontal-active@2.svg"));
  }

  scale.marks-before.horizontal slider:disabled {
      background-image: -gtk-scaled(url("objects/scale-slider-marks/before-horizontal-insensitive.svg"), url("objects/scale-slider-marks/before-horizontal-insensitive@2.svg"));
  }

  scale.marks-before.vertical slider {
      background-image: -gtk-scaled(url("objects/scale-slider-marks/before-vertical.svg"), url("objects/scale-slider-marks/before-vertical@2.svg"));
  }

  scale.marks-before.vertical slider:active {
      background-image: -gtk-scaled(url("objects/scale-slider-marks/before-vertical-active.svg"), url("objects/scale-slider-marks/before-vertical-active@2.svg"));
  }

  scale.marks-before.vertical slider:focus {
      background-image: -gtk-scaled(url("objects/scale-slider-marks/before-vertical.svg"), url("objects/scale-slider-marks/before-vertical@2.svg"));
  }

  scale.marks-before.vertical slider:focus:active {
      background-image: -gtk-scaled(url("objects/scale-slider-marks/before-vertical-active.svg"), url("objects/scale-slider-marks/before-vertical-active@2.svg"));
  }

  scale.marks-before.vertical slider:disabled {
      background-image: -gtk-scaled(url("objects/scale-slider-marks/before-vertical-insensitive.svg"), url("objects/scale-slider-marks/before-vertical-insensitive@2.svg"));
  }

  scale value,
  scale marks {
      color: #929292;
  }

  scale value {
      padding-bottom: 12px;
  }

  scale marks.top {
      margin-bottom: 6px;
      margin-top: 0px;
      margin-right: 0px;
      margin-left: 0px;
  }

  scale marks.bottom {
      margin-top: 6px;
      margin-bottom: 0px;
      margin-left: 0px;
      margin-right: 0px;
  }

  scale.horizontal indicator {
      min-height: 3px;
      min-width: 1px;
  }

  scale.vertical indicator {
      min-height: 1px;
      min-width: 3px;
  }
#+end_src
*** scale selected
#+begin_src css

  /* SCALE SELECTED */

  list > row:selected scale highlight,
  list > row:focus scale highlight,
  modelbutton:hover scale highlight {
      background-color: shade(@selected_bg_color, 1.5);
  }

#+end_src
** expander
GtkExpander allows the user to reveal its child by clicking on an expander triangle.
*Note: css nodes were changed in gtk4*

expander-widget
╰── box
├── title
│   ├── expander
│   ╰── <label widget>
╰── <child>
[[https://docs.gtk.org/gtk4/class.Expander.html][link]]

treeexpander
├── [indent]*
├── [expander]
╰── <child>
[[https://docs.gtk.org/gtk4/class.TreeExpander.html][link]]

#+begin_src css
  
  /*************************************************/
  /*                   EXPANDER                    */
  /*************************************************/

  expander {
      min-width: 16px;
      min-height: 16px;
      -gtk-icon-source: -gtk-icontheme("pan-end-symbolic");
  }

  expander:dir(rtl) {
      -gtk-icon-source: -gtk-icontheme("pan-end-symbolic-rtl");
  }

  expander:checked {
      -gtk-icon-source: -gtk-icontheme("pan-down-symbolic");
  }
#+end_src
** separator
A horizontal or vertical line for separation.
GtkSeparator has a single CSS node with name separator. The node gets one of
the .horizontal or .vertical style classes.

#+begin_src css

  /*************************************************/
  /*                  SEPARATOR                    */
  /*************************************************/

  separator {
      background-color: @border_color;
  }

  separator.vertical {
      min-width: 1px;
      margin: 0px 3px;
  }

  separator.horizontal {
      min-height: 1px;
      margin: 3px 0px;
  }  
#+end_src
** spinner
A GtkSpinner widget displays an icon-size spinning animation.
GtkSpinner has a single CSS node with the name spinner. When the animation is
active, the :checked pseudoclass is added to this node.

#+begin_src css
  
  /*************************************************/
  /*                  SPINNER                      */
  /*************************************************/

  @keyframes spin {
      to {
          -gtk-icon-transform: rotate(1turn); } }

  spinner {
      background: none;
      opacity: 0;
      -gtk-icon-source: -gtk-icontheme("process-working-symbolic");
  }

  spinner:checked {
      opacity: 1;
      animation: spin 1s linear infinite;
  }

  spinner:checked:disabled {
      opacity: 0.5;
  }
#+end_src
** rubberband
A css subnode or class to match the rubberband selection rectangle.
For example, treeview has a subnode rubberband like below.

treeview.view
├── header
│   ├── button
│   │   ╰── [sort-indicator]
┊   ┊
│   ╰── button
│       ╰── [sort-indicator]
│
├── [rubberband]
╰── [dndtarget]

and [[https://docs.gtk.org/gtk3/const.STYLE_CLASS_RUBBERBAND.html][link]] for css class.

#+begin_src css

  /*************************************************/
  /*                RUBBERBAND                     */
  /*************************************************/

  rubberband,
  .rubberband {
      border: 1px solid @rubberband_border;
      background-color: @rubberband_bg;
  } 
#+end_src
** tooltip
Widget representing a widget tooltip.
No css info is available.
[[https://docs.gtk.org/gtk4/class.Tooltip.html][link]]

#+begin_src css

  /*************************************************/
  /*                  TOOLTIP                      */
  /*************************************************/

  tooltip {
      padding: 5px 10px;
      border-radius: 8px;
      box-shadow: none;
  }

  tooltip.background {
      background-color: @tooltip_bg;
      background-clip: border-box;
      border: 1px solid rgba(255, 255, 255, 0.1);
      color: white;
  }

  tooltip > box {
      border-spacing: 6px;
  }

  tooltip * {
      background-color: @tooltip_bg;
  }  
#+end_src
** accelerator
#+begin_src css

  /*************************************************/
  /*                 ACCELERATOR                   */
  /*************************************************/

  accelerator {
      color: alpha(currentColor,0.55);
  }

#+end_src
** progressbar
GtkProgressBar displays the progress of a long running operation.

progressbar[.osd]
├── [text]
╰── trough[.empty][.full]
╰── progress[.pulse]
[[https://docs.gtk.org/gtk4/class.ProgressBar.html][link]]

#+begin_src css

  /*************************************************/
  /*                 PROGRESSBAR                   */
  /*************************************************/

  progressbar {
      padding: 0;
      font-size: smaller;
      box-shadow: none;
  }

  progressbar trough {
      border: none;
      border-radius: 3px;
      background-color: shade(@base_color, 0.75);
  }

  progressbar.horizontal trough {
      min-width: 32px;
      min-height: 5px;
  }

  progressbar.vertical trough {
      min-width: 5px;
      min-height: 32px;
  }

  progressbar progress {
      background-color: @selected_bg_color;
      box-shadow: none;
      border-radius: 3px;      
  }

  progressbar.horizontal progress {
      min-height: 5px;
  }

  progressbar.vertical progress {
      min-width: 5px;
  }
#+end_src
** levelbar
Widget that can be used as a level indicator.

levelbar[.discrete]
╰── trough
├── block.filled.level-name
┊
├── block.empty
┊
[[https://docs.gtk.org/gtk4/class.LevelBar.html][link]]

#+begin_src css

  /*************************************************/
  /*                   LEVELBAR                    */
  /*************************************************/

  levelbar trough {
      border: 1px solid @border_color;
      padding: 3px;
      border-radius: 5px;
      background-color: transparent;      
  }

  levelbar.horizontal block {
      min-width: 32px;
      min-height: 5px;
      border: none;      
  }

  levelbar.vertical block {
      min-width: 5px;
      min-height: 32px;
      border: none;      
  }

  levelbar.horizontal.discrete block {
      margin: 0 2px;
  }

  levelbar.vertical.discrete block {
      margin: 2px 0;
  }

  levelbar block:not(.empty) {
      background-color: @selected_bg_color;
      border-radius: 2px;
  }

  levelbar block.low {
      background-color: #F27835;
  }

  levelbar block.high {
      background-color: @selected_bg_color;
  }

  levelbar block.full {
      background-color: #73d216;
  }

  levelbar block.empty {
      background-color: shade(@base_color, 0.75);
  }
#+end_src
* Container Widgets
두 가지 방식을 생각해 볼 수 있다: bottom-up과 top-down.

bottom-up 방식은 낮은 레벨의 container에서 출발해서, 해당 container에 맞게 basic control의 settings를 override 한 후 높은 레벨에서 이와 같은 방법을 반복하는 것이다. top-down 방식은 bottom-up 방식의 반대.

결국 작업량은 a x b = b x a이니 동일할 터이지만 bottom-up 방식이 읽기 쉬울 것 같아 bottom-up 방식을 적용하기로 한다.
** Low Level(list, popover...)
*** list
GtkListBox is a vertical list.

list[.separators][.rich-list][.navigation-sidebar][.boxed-list]
╰── row[.activatable]
[[https://docs.gtk.org/gtk4/class.ListBox.html][link]]

#+begin_src css

  /*************************************************/
  /*                     LIST                      */
  /*************************************************/

  list {
      background-color: @base_color;
  }

  list > row {
      padding: 5px;
  }

  list > row:selected,
  list > row:focus {
      background-color: @selected_bg_color;
      color: @selected_fg_color;
  }

  list > row:focus label {
        color: @selected_fg_color;
  }
    
  list separator.horizontal {
      margin: 0px;
  }
#+end_src
*** controls
video 아래 play, pause, stop 등 버튼을 넣는 container

#+begin_src css
  controls.osd  {
      background-color: rgba(0, 0, 0, 0.7);
      color: @selected_fg_color;
      padding: 5px;
  }

  controls.osd button.image-button {
      min-width: 16px;
      min-height: 16px;
      border-radius: 50%;
  }  
#+end_src
*** popover
GtkPopover is a bubble-like context popup.

popover.background[.menu]
├── arrow
╰── contents
╰── <child>
[[https://docs.gtk.org/gtk4/class.Popover.html][link]]    

GtkPopoverMenu is just a subclass of GtkPopover that adds custom content to it, therefore it has the same CSS nodes. It is one of the cases that add a .menu style class to the main popover node.


#+begin_src css

  /*************************************************/
  /*                  POPOVER                      */
  /*************************************************/

  popover > contents {
      color: @fg_color;
      background-color: @base_color;
      border-radius: 5px;
      /* background-image:linear-gradient(to bottom left,rgba(242,243,246,1),rgba(213,218,224,1),rgba(213,218,224,1)); */
      padding: 5px;
      box-shadow: 0  2px 5px 2px rgba(0, 0, 0, 0.4);
  }

  popover scrolledwindow {
      border: none;
      background-color: transparent;
  }

  popover > list,
  popover > .view,
  popover > iconview,
  popover > .inline-toolbar,
  popover > toolbar {
      border-style: none;
  }

  popover.menu separator {

  }

  popover.messagepopover .popover-content-area {
      margin: 16px;
  }

  popover.messagepopover .popover-action-area {
      margin: 8px;
  }

  popover.messagepopover .popover-action-area button:not(:first-child):not(:last-child) {
      margin: 0 4px;
  }

  popover.popover-selector {
      padding: 0;
  }

  popover.popover-selector list row {
      padding: 5px 0;
  }

  popover.popover-selector list row image {
      margin-left: 3px;
      margin-right: 10px;
  }

  popover.magnifier {
      color: @fg_color;
      border: none;
      background-color: rgba(240, 242, 248, 0.85);
      background-clip: padding-box;
      box-shadow: none;
  }

#+end_src
**** modelbutton
Model buttons are used when popovers from a menu model with gtk_popover_new_from_model(); they can also be used manually in a GtkPopoverMenu.

modelbutton
├── <child>
╰── check OR radio OR arrow
[[https://docs.gtk.org/gtk3/class.ModelButton.html][link]]

GtkPopoverMenu has menu items with name button and class .model. 

#+begin_src css

  /* modelbutton */

  modelbutton,
  popover.menu button.model {
      padding: 4px;
      border-radius: 4px;
  }

  /* override the default */
  modelbutton:selected,
  popover.menu button.model:selected {
      color: currentColor;
      background-color: transparent;
  }

  modelbutton:hover,
  popover.menu button.model:hover {
      color: @selected_fg_color;
      background-color: @selected_bg_dark;
  }

  modelbutton accelerator {
      margin-left: 20px;
  }
  
  /*
  modelbutton:hover label,
  modelbutton:hover image,
  popover.menu button.model:hover label,
  popover.menu button.model:hover image {
      color: @selected_fg_color;
  }
  ,*/

  modelbutton check {
      text-shadow: none;
      min-height: 16px;
      min-width: 16px;
      margin-right: 6px;
      margin-left: 3px;        
  }

  modelbutton check:dir(rtl) {
      margin-left:3px;
      margin-right: 6px;
  }

  modelbutton radio {
      text-shadow: none;
      min-height: 16px;
      min-width: 16px;
      margin-right: 6px;
      margin-left: 3px;
  }

  modelbutton check:dir(rtl) {
      margin-left:3px;
      margin-right: 6px;
  }

#+end_src

** Mid Level(...bars like headerbar, etc)
*** headerbar
GtkHeaderBar is a widget for creating custom title bars for windows.

headerbar
╰── windowhandle
╰── box
├── box.start
│   ├── windowcontrols.start
│   ╰── [other children]
├── [Title Widget]
╰── box.end
├── [other children]
╰── windowcontrols.end
[[https://docs.gtk.org/gtk4/class.HeaderBar.html][link]]        

#+begin_src css

  /*************************************************/
  /*                  HEADERBAR                    */
  /*************************************************/

  headerbar {
      min-height: 38px;
      padding: 5px 10px;
      border-bottom: 1px solid @border_color;
      background-color: transparent;
      background-image: linear-gradient(to bottom, #ced2d9, #999ca1);
  }

  headerbar > * {
      background-color: transparent;
  }

  headerbar .title {
      text-shadow: 0 1px alpha(#ffffff, 0.35);
      padding-left: 12px;
      padding-right: 12px;
  }

  headerbar .subtitle {
      text-shadow: 0 1px alpha(#ffffff, 0.35);
      opacity: 0.75;
      font-size: smaller;
      padding-left: 12px;
      padding-right: 12px;
  }
#+end_src
**** button
#+begin_src css

   /* HEADERBAR BUTTON */

   headerbar button {
       -gtk-icon-style: symbolic;
   }

   headerbar button.image-button:not(.text-button):not(.image-text-button)  {
       background-color: transparent;
       background-image: none;
       border: none;
   }

   /* re-color symbolic icon */
   headerbar button.image-button:hover {
       color: white;
   }      

   headerbar button.image-button:checked,
   headerbar button.image-button:checked:hover,
   headerbar button.image-button:checked image {
       color: @selected_bg_color;
   }
#+end_src
*** menubar(GtkPopoverMenubar)
GtkPopoverMenuBar presents a horizontal bar of items that pop up popover menus when clicked.
GtkPopoverMenuBar has a single CSS node with name *menubar*, below which each item has its CSS node, and below that the corresponding popover.
The item whose popover is currently open gets the .active style class

menubar
├── item[.active]
┊   ╰── popover
╰── item
╰── popover
[[https://docs.gtk.org/gtk4/class.PopoverMenuBar.html][link]]

#+begin_src css

  /*************************************************/
  /*                    MENUBAR                    */
  /*************************************************/

  menubar {
      padding: 2px 6px;
      background-color: @menubar_bg;
      border-bottom: 1px solid #7e8185;
  }
#+end_src
**** menu > item
Note: GtkMenuItem(css node: menuitem) seems to be removed in gtk4

#+begin_src css

  /* MENU > ITEM */

  menubar > item {
      min-height: 16px;
      min-width: 42px;
      padding: 4px 5px;
  }

  menubar > item > label {
      text-shadow: 0 1px alpha(#ffffff, 0.35);
  }

  /* 'selected' seems like it :hover even with focus */
  menubar > item:selected,
  menubar > item:selected:hover {
      background-color: @selected_bg_dark;
      color: @selected_fg_color;
  }

  menubar > item:selected > label,
  menubar > item:selected:hover > label,
  menubar > item:selected cellview,
  menubar > item:selected:hover cellview {
      /* color: @selected_fg_color; */
      text-shadow:  0 -1px alpha(#000000, 0.04);
  }

  menubar > item:disabled {
      color: @insensitive_fg_color;
  }

#+end_src
**** .context-menu
#+begin_src css

  /* CONTEXT MENU  */

  .context-menu {
      /*padding: 4px 0px;*/
      font: initial;
      background-color: @base_color;
      background-image: none;      
  }
#+end_src
*** toolbar
#+begin_src css

  /*************************************************/
  /*                   TOOLBAR                     */
  /*************************************************/

  box.toolbar {
      padding: 6px 4px;
      background-image: linear-gradient(to top, #7e8185 1px, #999ca1 1px, #b5b8be);
      /* border-bottom: 1px solid @border_color; */
  }

  box.toolbar > button.image-button {
      -gtk-icon-size: 20px;
  }

  box.toolbar separator {
      background: none;
  }

  box.toolbar.horizontal separator {
      margin: 0 6px;
  }

  box.toolbar.vertical separator {
      margin: 6px 0;
  }

  box.toolbar:not(.inline-toolbar) switch {
      margin-right: 1px;
      margin-bottom: 1px;
  }

  box.toolbar:not(.inline-toolbar) scale {
      margin-right: 1px;
      margin-bottom: 1px;
  }

  box.toolbar:not(.inline-toolbar) entry {
      margin-right: 1px;
      margin-bottom: 1px;
  }

  box.toolbar:not(.inline-toolbar) spinbutton {
      margin-right: 1px;
      margin-bottom: 1px;
  }

  box.toolbar:not(.inline-toolbar) button {
      margin-right: 1px;
      margin-bottom: 1px;
  }

  box.toolbar:not(.inline-toolbar) .linked > button,
  box.inline-toolbar .linked > button {
      margin-right: 0;
  }

  box.toolbar:not(.inline-toolbar) .linked > entry,
  box.inline-toolbar .linked > entry {
      margin-right: 0;
  }

  box.toolbar.osd {
      padding: 7px;
      border: 1px solid rgba(0, 0, 0, 0.5);
      border-radius: 5px;
      background-color: rgba(53, 57, 69, 0.85);
  }

  box.toolbar.osd.left {
      border-radius: 0;
  }

  box.toolbar.osd.right {
      border-radius: 0;
  }

  box.toolbar.osd.top {
      border-radius: 0;
  }

  box.toolbar.osd.bottom {
      border-radius: 0;
  }

  box.toolbar.osd.top {
      border-width: 0 0 1px 0;
  }

  box.toolbar.osd.bottom {
      border-width: 1px 0 0 0;
  }

  box.toolbar.osd.left {
      border-width: 0 1px 0 0;
  }

  box.toolbar.osd.right {
      border-width: 0 0 0 1px;
  }

  .osd .toolbar {
      background-color: transparent;
  }

  box.toolbar.secondary-toolbar {
      padding: 3px;
      border-bottom: 1px solid @light_border_color;
  }

  box.toolbar.secondary-toolbar button {
      padding: 0 3px 0 3px;
  }

  box.toolbar.bottom-toolbar,
  box.bottom-toolbar.inline-toolbar {
      padding: 5px;
      border-width: 1px 0 1px 0;
      border-style: solid;
      border-color: @border_color;
      background-color: @bg_color;
  }
#+end_src
**** .primary-toolbar
#+begin_src css
  
  /* PRIMARY TOOLBAR */

  .primary-toolbar:not(.libreoffice-toolbar) {
      min-height: 20px;
      box-shadow: none;
      border-width: 0 0 1px 0;
      border-style: solid;
      background-image: linear-gradient(to top, #7e8185 1px, #999ca1 1px, #b5b8be);
  }

  .primary-toolbar button {
      -gtk-icon-style: symbolic;
      min-height: 16px;
      background-image: none;
  }

  .primary-toolbar button:hover {
      color: @text_color;
  }
#+end_src
**** .inline-toolbar
#+begin_src css

  /* INLINE-TOOLBAR */

  inline-toolbar, /* no such a css node? */
  .inline-toolbar {
      background-image: none;
      background-color: @bg_color;      
      border-style: solid;
      border-color: @border_color;
      border-width: 0 1px 1px;
      padding: 4px;
  }

  .inline-toolbar separator {
      background: none;
  }

  .inline-toolbar.horizontal separator {
      margin: 0 6px;
  }

  .inline-toolbar.vertical separator {
      margin: 6px 0;
  }

  /* INLINE-TOOLBAR BUTTON */

  .inline-toolbar button {
      border-radius: 0px;
  }

  .inline-toolbar button:first-child {
      border-top-right-radius:0px;
      border-bottom-right-radius:0px;
      border-top-left-radius: 4px;
      border-bottom-left-radius: 4px;
      margin-left: 0px;
  }

  .inline-toolbar button:last-child {
      border-top-left-radius: 0px;
      border-bottom-left-radius: 0px;
      border-top-right-radius: 4px;
      border-bottom-right-radius: 4px;
      margin-left:-1px;
  }

  .inline-toolbar button:only-child {
      border-radius: 4px;
  }

  /* INLINE-TOOLBAR TOOLBUTTON */

  .inline-toolbar toolbutton {
      border-radius: 0px;
      box-shadow: none;
  }

  .inline-toolbar toolbutton:first-child > button {
      border-top-right-radius:0px;
      border-bottom-right-radius:0px;
      border-top-left-radius: 4px;
      border-bottom-left-radius: 4px;
      margin-left: 0px;
  }

  .inline-toolbar toolbutton:last-child > button {
      border-top-left-radius: 0px;
      border-bottom-left-radius: 0px;
      border-top-right-radius: 4px;
      border-bottom-right-radius: 4px;
      margin-left:-1px;
  }

  .inline-toolbar toolbutton:only-child > button {
      border-radius: 4px;
  }

#+end_src
*** infobar
Show messages without a dialog.
GtkInfoBar has a single CSS node with name infobar. The node may get one of the style classes .info, .warning, .error or .question, depending on the message type. If the info bar shows a close button, that button will have the .close style class applied.
*Note: Deprecated since: 4.10*
 
#+begin_src css

  /*************************************************/
  /*                   INFOBAR                     */
  /*************************************************/

  infobar {
      border: 1px solid @border_color;
      border-radius: 4px;
  }
#+end_src
*** actionbar
GtkActionBar is designed to present contextual actions.

actionbar
╰── revealer
╰── box
├── box.start
│   ╰── [start children]
├── [center widget]
╰── box.end
╰── [end children]
[[https://docs.gtk.org/gtk4/class.ActionBar.html][link]]

#+begin_src css
  
  /*************************************************/
  /*                 ACTIONBAR                     */
  /*************************************************/

  actionbar {
      padding: 6px;
  }
#+end_src

*** searchbar
GtkSearchBar is a container made to have a search entry.

searchbar
╰── revealer
    ╰── box
        ├── [child]
        ╰── [button.close]
[[https://docs.gtk.org/gtk4/class.SearchBar.html][link]]

#+begin_src css

  /*************************************************/
  /*                 SEARCHBAR                     */
  /*************************************************/

  searchbar {
    /*background-color: #ebf0f4;
    border-style: solid;
    border-color: @light_border_color;
    border-width: 0 0 1px;
    padding: 3px; */
  }

  /* searchbar나 revealer에 padding/margin을 주게 되면 searchbar가 활성화
     되지 않은 상태에서 padding/margin만큼 빈 공간이 보여지게 된다 */ 
  searchbar > revealer entry {
      margin: 3px 0px;
  }

#+end_src
*** scrollbar
The GtkScrollbar widget is a horizontal or vertical scrollbar.

CSS nodes

scrollbar
╰── range[.fine-tune]
╰── trough
╰── slider
[[https://docs.gtk.org/gtk4/class.Scrollbar.html][link]]

#+begin_src css

  /*************************************************/
  /*                   SCROLLBAR                   */
  /*************************************************/

  scrollbar {
      background-color: #fcfcfc;
      /*transition: 300ms cubic-bezier(0.25, 0.46, 0.45, 0.94);*/ }

  scrollbar.top {
      border-bottom: 1px solid @light_border_color;
  }

  scrollbar.bottom {
      border-top: 1px solid @light_border_color;
  }

  scrollbar.left {
      border-right: 1px solid @light_border_color;
  }

  scrollbar.right {
      border-left: 1px solid @light_border_color;
  }

  scrollbar button {
      border: none;
  }

  scrollbar.vertical button.down {
      -gtk-icon-source: -gtk-icontheme("pan-down-symbolic");
  }

  scrollbar.vertical button.up {
      -gtk-icon-source: -gtk-icontheme("pan-up-symbolic");
  }

  scrollbar.horizontal button.down {
      -gtk-icon-source: -gtk-icontheme("pan-right-symbolic");
  }

  scrollbar.horizontal button.up {
      -gtk-icon-source: -gtk-icontheme("pan-left-symbolic");
  }

  scrollbar slider {
      margin: -1px;
      border: 4px solid transparent;
      border-radius: 8px;
      background-clip: padding-box;
      background-color: #a2a2a2;
  }

  scrollbar.horizontal slider {
      min-width: 40px;
      min-height: 6px;
      border-width: 5px 4px;
  }

  scrollbar.vertical slider {
      min-width: 6px;
      min-height: 40px;
      border-width: 4px 5px;
  }

  scrollbar slider:active {
      background-color: @selected_bg_color;
  }

  scrollbar slider:disabled {
      background-color: transparent;
  }

  scrollbar.fine-tune slider {
      min-width: 4px;
      min-height: 4px;
  }

  scrollbar.overlay-indicator:not(.dragging):not(.hovering) {
      opacity: 0.4;
      border-color: transparent;
      background-color: transparent;
  }

  scrollbar.overlay-indicator:not(.dragging):not(.hovering) slider {
      margin: 0;
      min-width: 4px;
      min-height: 4px;
      background-color: #636363;
      border: 1px solid rgba(255, 255, 255, 0.6);
  }

  scrollbar.overlay-indicator:not(.dragging):not(.hovering).horizontal slider {
      margin: 0 2px;
      min-width: 40px;
  }

  scrollbar.overlay-indicator:not(.dragging):not(.hovering).vertical slider {
      margin: 2px 0;
      min-height: 40px;
  }

  scrollbar.overlay-indicator.dragging,
  scrollbar.overlay-indicator.hovering {
      opacity: 0.99;
  }
#+end_src
*** revealer
A GtkRevealer animates the transition of its child from invisible to visible.
GtkRevealer has a single CSS node with name revealer. When styling GtkRevealer using CSS, remember that it only hides its contents, no itself. That means applied margin, padding and borders will be visible even when the GtkRevealerr:reveal-child property is set to FALSE.
[[https://docs.gtk.org/gtk.3/class.Revealer.html][link]]

#+begin_src css

  /*************************************************/
  /*                   REVEALER                    */
  /*************************************************/

  revealer > frame {
      border: 1px solid @border_color;
      border-radius: 6px;
      background-color: @base_color;
      padding: 8px 10px;
  }
#+end_src
*** statusbar
#+begin_src css

  /*************************************************/
  /*                   STATUSBAR                   */
  /*************************************************/
  statusbar {
      padding: 4px 6px;
  }
#+end_src
** High Lelel(treeview, notebook, etc)
*** box
#+begin_src css

  /*************************************************/
  /*                      BOX                      */
  /*************************************************/

  box {
      color: inherit;
      background-color: inherit;
  }

  box.osd {
      background-color: @base_color;
      border-radius: 5px;
      background-image: linear-gradient(to top, #7e8185 1px, #999ca1 1px, #b5b8be);
      /* 밝은 색
        background-image:linear-gradient(to bottom,rgba(242,243,246,1),rgba(213,218,224,1),rgba(213,218,224,1)); */
      padding: 8px;
      border: 1px solid @border_color;
  }

#+end_src
*** paned
Widget with two panes, arranged either horizontally or vertically.

paned
├── <child>
├── separator[.wide]
╰── <child>
[[https://docs.gtk.org/gtk4/class.Paned.html][link]]

#+begin_src css
  
  /*************************************************/
  /*                      PANED                    */
  /*************************************************/

  paned .sidebar {
      border-style: none;
  }

  /* PANED SEPARATOR */

  paned > separator {
      /* Required. without this, some noise appears. dunno why */
      -gtk-icon-source: none;
      border-style: solid;
      border-color: transparent;
  }

  paned.horizontal > separator { /* separator.vertical */
      min-width: 1px;
      margin: 2px 0px;
      border-width: 0px 2px;
      transition: border-color 0.3s ease-in-out;
  }

  paned.horizontal > separator.wide {
      margin: 50px 1px;
      border-color: darker(@border_color);
      border-radius: 4px;
      background-color: darker(@border_color);
  }

  paned.horizontal > separator.wide:hover {
      border-color: @selected_bg_color;
      border-radius: 4px;
      background-color: @selected_bg_color;
  }

  paned.vertical > separator { /* separator.horizontal */
      min-height: 1px;
      margin: 0px 2px;
      border-width: 2px 0px;
      transition: border-color 0.3s ease-in-out;
  }

  paned.vertical > separator.wide {
      margin: 1px 50px;
      border-color: darker(@border_color);
      border-radius: 4px;
      background-color: darker(@border_color);
  }

  paned.vertical > separator.wide:hover {
      border-color: @selected_bg_color;
      border-radius: 4px;
      background-color: @selected_bg_color;
  }

  paned > separator.sidebar,
  paned > .sidebar + separator,
  paned > placessidebar + separator {
      margin: 0px;
      border-width: 0px;
  }
#+end_src
*** textview
#+begin_src css

  /*************************************************/
  /*                  TEXTVIEW                     */
  /*************************************************/

  textview {
      background-color: @base_color;
      outline: 1px solid @light_border_color;      
  }

  textview:focus {
      background-color: white;
  }

#+end_src
*** iconview
#+begin_src css

  /*************************************************/
  /*                  ICONVIEW                     */
  /*************************************************/

  iconview {
      background-color: @base_color;
  }  
#+end_src
*** treeview & columnview
Widget for displaying both trees and lists.
*NOTE: treeview was deprecated since 4.10*

treeview.view
├── header
│   ├── button
│   │   ╰── [sort-indicator]
┊   ┊
│   ╰── button
│       ╰── [sort-indicator]
│
├── [rubberband]
╰── [dndtarget]
[[https://docs.gtk.org/gtk4/class.TreeView.html][link]]

GtkColumnView presents a large dynamic list of items using multiple columns with headers. simillar to treeview of gtk3.
GtkColumnView uses the factories of its columns to generate a cell widget for each column, for each visible item and displays them together as the row for this item.
The GtkColumnView:show-row-separators and GtkColumnView:show-column-separators properties offer a simple way to display separators between the rows or columns.

columnview[.column-separators][.rich-list][.navigation-sidebar][.data-table]
├── header
│   ├── <column header>
┊   ┊
│   ╰── <column header>
│
├── listview
│
┊
╰── [rubberband]
[[https://docs.gtk.org/gtk4/class.ColumnView.html][link]]

#+begin_src css

  /*************************************************/
  /*            TREEVIEW  & COLUMNVIEW             */
  /*************************************************/

  treeview.view,
  columnview {
      background-color: @base_color;
      border-color: @border_color;
  }

  treeview.view:selected,
  columnview:selected {
      background-color: @selected_bg_color;
      color: @selected_fg_color;
  }

  treeview.view:hover:not(:selected),
  columnview:hover:not(:selected) {
      background-color: @hover_bg;
  }

  treeview.view:disabled:selected,
  columnview:disabled:selected {
      color: #79a6e8;
  }

  treeview.view:disabled:selected:focus,
  columnview:disabled:selected:focus {
      color: #90b5ec;
  }

  treeview.view:drop(active),
  columnview:drop(active) {
      border-style: solid none;
      border-width: 1px;
      border-color: @selected_bg_color;
  }

  columnview.view > dndtarget.after:drop(active),
  treeview.view > dndtarget.after:drop(active) {
      border-top-style: none;
  }
  columnview.view > dndtarget.before:drop(active),
  treeview.view > dndtarget.before:drop(active) {
      border-bottom-style: none;
  }

  treeview.view:drop(active).after,
  columnview:drop(active).after {
      border-top-style: none;
  }

  treeview.view:drop(active).before,
  columnview:drop(active).before {
      border-bottom-style: none;
  }

#+end_src
**** treeview header
#+begin_src css

  /* TREEVIEW HEADER BUTTON */

  columnview > header button,
  treeview > header > button {
      min-height: 0;
      min-width: 0;
      padding: 3px 6px;
      font-weight: normal;
      /* color: @fg_color; */
      background-color: @button_bg;
      background-image: none;
      border-color: @border_color;
      border-style: none solid solid none;
      border-radius: 0;
  }

  columnview > header button:focus,
  treeview > header > button:focus {
      box-shadow: none;
  }

  columnview > header button:last-child,
  treeview > header button:last-child {
      border-right-style: none;
  }

  columnview > header button:active,
  treeview > header > button:active {
      background-color: @button_active_bg;
  }

  columnview > header button:hover,
  treeview > header > button:hover {
      background-color: shade(@button_bg, 0.9);
  }

  columnview > header button.dnd,
  treeview header.button.dnd {
      padding: 0 6px;
      transition: none;
      color: @selected_fg_color;
      /*
         text-shadow:  0 -1px alpha(#ffffff, 0.04),
                       -1px  0px alpha(@fg_color, 0.05),
                       1px  0px alpha(@fg_color, 0.05),
                       0px  1px alpha(@fg_color, 0.3),
                       0px  2px alpha(@fg_color, 0.05); */
      background-color: @selected_bg_color;
      border-radius: 0;
      border-style: none;
      box-shadow: inset 0 0 0 1px @selected_fg_color;
  }
  /* other stuff */

  columnview.expander,
  treeview.expander {
      min-width: 16px;
      min-height: 16px;
      -gtk-icon-source: -gtk-icontheme("pan-end-symbolic");
  }

  columnview.view.expander:dir(rtl),
  treeview.view.expander:dir(rtl) {
      -gtk-icon-source: -gtk-icontheme("pan-end-symbolic-rtl");
  }

  columnview.expander:checked,
  treeview.expander:checked {
      -gtk-icon-source: -gtk-icontheme("pan-down-symbolic");
  }


  treeview entry,
  treeview entry.flat {
      border-radius: 0;
  }

  treeview entry:focus,
  treeview entry.flat:focus
  {
      border-color: @selected_bg_color;
  }
#+end_src
*** notebook
Container whose children are pages switched between using tabs.

notebook
├── header.top
│   ├── [<action widget>]
│   ├── tabs
│   │   ├── [arrow]
│   │   ├── tab
│   │   │   ╰── <tab label>
┊   ┊   ┊
│   │   ├── tab[.reorderable-page]
│   │   │   ╰── <tab label>
│   │   ╰── [arrow]
│   ╰── [<action widget>]
│
╰── stack
├── <child>
┊
╰── <child>
[[https://docs.gtk.org/gtk3/class.Notebook.html][link]]

#+begin_src css

  /*************************************************/
  /*                  NOTEBOOK                     */
  /*************************************************/

  notebook {
      border: 1px solid @border_color;
      background-color: @base_color;
  }

  notebook > header {
      /* margin을 notebook에 설정하면, xfce4-terminal과 같은 notebook을 사용하는
         application들에 바로 바로 영향이 나타난다. */
      margin: 8px 5px;
      background-color: transparent;
  }

  notebook > header.top {
      padding: 0px 5px 5px 0px;
      border-bottom: 1px solid @border_color;
      margin-bottom: 5px;
  }

  notebook > header.bottom {
      padding: 5px 5px 0px 0px;
      border-top: 1px solid @border_color;
      margin-top: 5px;
  }

  notebook > header.left {
      padding: 0px 5px 5px 0px;
      border-right: 1px solid @border_color;
      margin-right: 5px;
  }

  notebook > header.right {
      padding: 0px 0px 5px 5px;
      border-left: 1px solid @border_color;
      margin-left: 5px;
  }

  notebook > stack:not(:only-child) {
      padding: 0px 5px 5px 5px;
      background-color: transparent;
      /* border: 1px solid @border_color; */
  }

  notebook > header > tabs > tab {
      min-width: 20px;
      min-height: 20px;
      background-color: transparent;
      background-image: linear-gradient(to bottom, rgba(255,255,255,1), rgba(228,233,239,1));      
      border: 1px solid @border_color;
      border-radius: 4px;
      padding: 4px 10px;
  }

  notebook > header > tabs > tab:checked,
  notebook > header > tabs > tab:checked box {
      color: @selected_fg_color;
      background-color: @selected_bg_color;
      background-image: none;
  }

  notebook > header > tabs > tab:hover:not(:checked) {
      background-color: shade(rgba(228,233,239,1), 1.1);
      background-image: none;      
  }

  notebook > header.bottom > tabs > tab,
  notebook > header.top > tabs > tab {
      margin-right: 5px;
  }

  notebook > header.left > tabs > tab,
  notebook > header.right > tabs > tab {  
      margin-bottom: 5px;
  }

  notebook > header.bottom > tabs > arrow.up,
  notebook > header.top > tabs > arrow.up {
      -gtk-icon-source: -gtk-icontheme("pan-end-symbolic");
  }

  notebook > header.top > tabs > arrow.up:last-child,
  notebook > header.bottom > tabs > arrow.up:last-child {
      margin-left: 2px;
  }

  notebook > header.top > tabs > arrow.down,
  notebook > header.bottom > tabs > arrow.down {
      -gtk-icon-source: -gtk-icontheme("pan-start-symbolic");
  }

  notebook > header.top > tabs > arrow.down:first-child,
  notebook > header.bottom > tabs > arrow.down:first-child {
      margin-right: 2px;
  }

  notebook > header.left > tabs > arrow.up,
  notebook > header.right > tabs > arrow.up {
      -gtk-icon-source: -gtk-icontheme("pan-down-symbolic");
  }

  notebook > header.left > tabs > arrow.up:last-child,
  notebook > header.right > tabs > arrow.up:last-child {
      margin-top: 2px;
  }

  notebook > header.left > tabs > arrow.down,
  notebook > header.right > tabs > arrow.down {
      -gtk-icon-source: -gtk-icontheme("pan-up-symbolic");
  }

  notebook > header.left > tabs > arrow.down:first-child,
  notebook > header.right > tabs > arrow.down:first-child {
      margin-bottom: 2px;
  }

  notebook > header > tabs > arrow,
  notebook > header > tabs > arrow:hover,
  notebook > header > tabs > arrow:active {
      color: @fg_color;
  }

  notebook > header > tabs > arrow:disabled {
      color: rgba(37, 37, 37, 0.25);
  }

  notebook > header > tabs > tab button {
      min-height: 16px;
      min-width: 16px;
      background-color: transparent;
      background-image: none;
      border: none;
      border-radius: 50%;
      margin: 0px;
      padding: 0px;
      opacity: 0.7;
  }

  notebook > header > tabs > tab button:dir(ltr) {
      margin-left: 3px;
  }

  notebook > header > tabs > tab button:dir(rtl) {
      margin-right: 3px;
  }

  notebook > header > tabs > tab button:hover {
      background-color: transparent;
      background-image: none;      
      opacity: 1.0;
  }
#+end_src
*** listview
GtkListView presents a large dynamic list of items.
GtkListView uses its factory to generate one row widget for each visible item and shows them in a linear display, either vertically or horizontally.
The GtkListView:show-separators property offers a simple way to display separators between the rows.

GtkListView uses a single CSS node named listview. It may carry the .separators style class, when GtkListView:show-separators property is set. Each child widget uses a single CSS node named row. If the GtkListItem:activatable property is set, the corresponding row will have the .activatable style class. For rubberband selection, a node with name rubberband is used.

listview[.separators][.rich-list][.navigation-sidebar][.data-table]
├── row[.activatable]
│
├── row[.activatable]
│
┊
╰── [rubberband]
[[https://docs.gtk.org/gtk4/class.ListView.html][link]]
#+begin_src css

  /*************************************************/
  /*                  LISTVIEW                     */
  /*************************************************/


#+end_src
*** stackswitcher
The GtkStackSwitcher shows a row of buttons to switch between GtkStack pages.

GtkStackSwitcher has a single CSS node named stackswitcher and style class .stack-switcher.
When circumstances require it, GtkStackSwitcher adds the .needs-attention style class to the widgets representing the stack pages.
[[https://docs.gtk.org/gtk4/class.StackSwitcher.html][link]]

#+begin_src css

  /******************************************************/
  /*                 STACK SWITCHER                     */
  /******************************************************/

  stackswitcher > button {
      background-color: transparent;
      background-image: linear-gradient(to bottom, rgba(255,255,255,1), rgba(228,233,239,1));
      border-radius: 0px;
  }

  stackswitcher > button:hover {
      background-color: shade(rgba(228,233,239,1), 0.95);
      background-image: none;
  }

  stackswitcher > button:checked,
  stackswitcher > button:checked:hover {
      color: @selected_fg_color;
      background-color: @selected_bg_color;
      background-image: none;
  }

  stackswitcher > button:only-child {
      border-radius: 4px;
  }

  stackswitcher > button:not(only-child):first-child {
      border-radius: 4px 0px 0px 4px;
  }

  stackswitcher > button:not(only-child):last-child {
      border-radius: 0px 4px 4px 0px;
  }

  stackswitcher > button + button {
      border-left-style: none;
  }
#+end_src
*** buttonbox & likes
#+begin_src css
  buttonbox,
  box.dialog-action-area.horizontal {
      padding: 10px 30px 20px 30px;
  }

  buttonbox > button:not(:last-child),
  box.dialog-action-area.horizontal > button:not(:last-child)   {
      margin-right: 15px;
  }

  buttonbox > button:focus,
  box.dialog-action-area.horizontal > button:focus {
      box-shadow: 0px 0px 0px 1.3px @selected_bg_color inset;
  }
#+end_src
*** flowbox
A GtkFlowBox positions child widgets in sequence according to its orientation.
Although a GtkFlowBox must have only GtkFlowBoxChild children, you can add any kind of widget to it via gtk_container_add(), and a GtkFlowBoxChild widget will automatically be inserted between the box and the widget.

flowbox
├── flowboxchild
│   ╰── <child>
├── flowboxchild
│   ╰── <child>
┊
╰── [rubberband]

GtkFlowBox uses a single CSS node with name flowbox. GtkFlowBoxChild uses a single CSS node with name flowboxchild. For rubberband selection, a subnode with name rubberband is used.
[[https://docs.gtk.org/gtk4/class.FlowBox.html][link]]

#+begin_src css
  flowboxchild {
      background-color: transparent;
      padding: 2px;
      border-radius: 4px;
  }

  flowboxchild:selected {
      background-color: transparent;
      box-shadow: 0px 0px 0px 2px @selected_bg_color inset;
  }
#+end_src
*** sidebar
GtkPlacesSidebar does NOT seem to be suppored with gtk4. Not sure though.
GtkStackSidebar has a single CSS node with name stacksidebar and style class .sidebar.

#+begin_src css

  /*************************************************/
  /*                   SIDEBAR                     */
  /*************************************************/

  .sidebar {
      background-color: @placessidebar_bg;
  }

  .sidebar treeview {
      background-color: @placessidebar_bg;
  }

  .sidebar treeview:selected {
      color: @selected_fg_color;
      background-color: @selected_bg_dark;
  }

  .sidebar treeview:hover:not(:selected) {
      background-color: shade(@placessidebar, 1.1);
  }
#+end_src

**** stacksidebar
GtkPlacesSidebar does NOT seem to be suppored with gtk4. Not sure though.

#+begin_src css
  
  /* STACKSIDEBAR */
  /*
  stacksidebar row {
      padding: 10px 4px;
  }

  stacksidebar row > label {
      padding-left: 6px;
      padding-right: 6px;
  }

  stacksidebar row.needs-attention > label {
      background-size: 6px 6px;
  } */
#+end_src
**** placessidebar
#+begin_src css
  
  /* PLACESSIDEBAR */

  placessidebar {
      -gtk-icon-style: symbolic;
      min-width: 176px;
      border-style: none;
      background-color: @placessidebar_bg;
  }

  placessidebar > viewport.frame {
      border-style: none;
      border-right: 1px solid @light_border_color;
  }

  placessidebar row,
  row.sidebar-row {
      min-height: 30px;
      padding: 0px;
  }

  placessidebar row > revealer,
  row.sidebar-row > revealer {
      padding: 0 10px;
  }

  placessidebar row image.sidebar-icon:dir(ltr) {
      padding-right: 8px;
  }

  placessidebar row image.sidebar-icon:dir(rtl) {
      padding-left: 8px;
  }

  placessidebar row label.sidebar-label:dir(ltr) {
      padding-right: 2px;
  }

  placessidebar row label.sidebar-label:dir(rtl) {
      padding-left: 2px;
  }
#+end_src

**** button.sidebar
#+begin_src css
  
  /* button.sidebar-button */

  button.sidebar-button {
      color: rgba(37,37,37,0.55);
      border-radius: 5px;
      border-right-color: rgba(0,0,0,0.12);
      border-left-color: rgba(0,0,0,0.12);
      border-bottom-color: rgba(0, 0, 0, 0.18);
      border-top-color: rgba(0, 0, 0, 0.08);
      background-color: transparent;
      background-image: linear-gradient(to bottom,rgba(255,255,255,1),
                                        rgba(255,255,255,1));
  }

  button.sidebar-button:hover {
      /*
    transition: all 200ms cubic-bezier(0.25, 0.46, 0.45, 0.94);
    transition-duration: 350ms;
     ,*/
  }

  button.sidebar-button:hover:active {
      /*transition: all 200ms cubic-bezier(0.25, 0.46, 0.45, 0.94); */ }

  button.sidebar-button:disabled {
      border-color: transparent;
      background-color: transparent;
      background-image: none;
  }
#+end_src
** Top Level(window, scrolledwindow, dialog)
*** window
Toplevel window which can contain other widgets.

window.background [.csd / .solid-csd / .ssd] [.maximized / .fullscreen / .tiled]
├── <child>
╰── <titlebar child>.titlebar [.default-decoration]
*Note*: decoration node has been removed in gtk4

GtkWindow has a main CSS node with name window and style class .background.

Style classes that are typically used with the main CSS node are .csd (when client-side decorations are in use), .solid-csd (for client-side decorations without invisible borders), .ssd (used by mutter when rendering server-side decorations). GtkWindow also represents window states with the following style classes on the main node: .maximized, .fullscreen, .tiled (when supported, also .tiled-top, .tiled-left, .tiled-right, .tiled-bottom).

GtkWindow subclasses often add their own discriminating style classes, such as .dialog, .popup or .tooltip.

Generally, some CSS properties don’t make sense on the toplevel window node, such as margins or padding. When client-side decorations without invisible borders are in use (i.e. the .solid-csd style class is added to the main window node), the CSS border of the toplevel window is used for resize drags. In the .csd case, the shadow area outside of the window can be used to resize it.

GtkWindow adds the .titlebar and .default-decoration style classes to the widget that is added as a titlebar child.
[[https://docs.gtk.org/gtk4/class.Window.html][link]]

#+begin_src css

  /*************************************************/
  /*                 WINDOW                        */
  /*************************************************/
  window {
      color: @fg_color;
      background-color: @bg_color;
      box-shadow: 0px 0px 4px 2px rgba(0,0,0,0.4);
      border: 1px solid @border_color;
      border-radius: 6px 6px 0px 0px;
  }

  window:backdrop {
      /* if set box-shadow to none, window changes it position
         and size by the size of box-shadow. So just make it transparent
         by setting the alpah to zero */
      box-shadow: 0px 0px 4px 2px rgba(0,0,0,0);
  }

  window.maximized,
  window.fullscreen {
      border-radius: 0px;
      box-shadow: none;
  }

  /* .titlebar class를 가진 widget은 window의 child node일 수도 있고,
     headerbar.titlebar일 수도 있다.  그러나 대부분의 경우, 하나의 app에서
     .titlebar class를 가진 widget은 하나이고 둘 다인 경우는 드뭄 */
  .titlebar {
      border-radius: 8px 8px 0px 0px;
      padding: 5px 10px;
  }
#+end_src
*** scrolledwindow
Container that makes its child scrollable.

GtkScrolledWindow has a main CSS node with name scrolledwindow. It gets a .frame style class added when GtkScrolledWindow:has-frame is TRUE.
It uses subnodes with names overshoot and undershoot to draw the overflow and underflow indications. These nodes get the .left, .right, .top or .bottom style class added depending on where the indication is drawn.

GtkScrolledWindow also sets the positional style classes (.left, .right, .top, .bottom) and style classes related to overlay scrolling (.overlay-indicator, .dragging, .hovering) on its scrollbars.

If both scrollbars are visible, the area where they meet is drawn with a subnode named junction.
[[https://docs.gtk.org/gtk4/class.ScrolledWindow.html][link]]

#+begin_src css

  /*************************************************/
  /*               SCROLLED WINDOWS                */
  /*************************************************/

  scrolledwindow {
      background-color: @bg_color;
      border: 1px solid @border_color;
  }

  /* overshoot is a visual hint that happen when scrolling is attempted
         past the limits of a scrollable area. */

  scrolledwindow > overshoot.top {
      /* background-image: radial-gradient(farthest-side at top, #b6aea5 85%, rgba(182, 174, 165, 0)), radial-gradient(farthest-side at top, rgba(46, 52, 54, 0.07), rgba(46, 52, 54, 0)); */
      background-image: radial-gradient(farthest-side at top, rgba(82, 148, 226, 0.2), rgba(82, 148, 226, 0)), radial-gradient(farthest-side at top, rgba(82, 148, 226, 0.13), rgba(82, 148, 226, 0));      
      background-size: 100% 3%, 100% 50%;
      background-repeat: no-repeat;
      background-position: top;
      background-color: transparent;
      border: none;
      box-shadow: none;
  }
  scrolledwindow > overshoot.bottom {
      /* background-image: radial-gradient(farthest-side at bottom, #b6aea5 85%, rgba(182, 174, 165, 0)), radial-gradient(farthest-side at bottom, rgba(46, 52, 54, 0.07), rgba(46, 52, 54, 0)); */
      background-image: radial-gradient(farthest-side at bottom, rgba(82, 148, 226, 0.2), rgba(82, 148, 226, 0)), radial-gradient(farthest-side at bottom, rgba(82, 148, 226, 0.13), rgba(82, 148, 226, 0));           
      background-size: 100% 3%, 100% 50%;
      background-repeat: no-repeat;
      background-position: bottom;
      background-color: transparent;
      border: none;
      box-shadow: none;
  }
  scrolledwindow > overshoot.left {
      background-image: radial-gradient(farthest-side at left, #b6aea5 85%, rgba(182, 174, 165, 0)), radial-gradient(farthest-side at left, rgba(46, 52, 54, 0.07), rgba(46, 52, 54, 0));
      background-size: 3% 100%, 50% 100%;
      background-repeat: no-repeat;
      background-position: left;
      background-color: transparent;
      border: none;
      box-shadow: none;
  }
  scrolledwindow > overshoot.right {
      background-image: radial-gradient(farthest-side at right, #b6aea5 85%, rgba(182, 174, 165, 0)), radial-gradient(farthest-side at right, rgba(46, 52, 54, 0.07), rgba(46, 52, 54, 0));
      background-size: 3% 100%, 50% 100%;
      background-repeat: no-repeat;
      background-position: right;
      background-color: transparent;
      border: none;
      box-shadow: none;
  }

  scrolledwindow undershoot {
      background-color: transparent;
      background-origin: content-box;
      border: none;
  }

  scrolledwindow undershoot.top {
      background-image: linear-gradient(to left, rgba(255, 255, 255, 0.2) 50%, rgba(0, 0, 0, 0.2) 50%);
      padding-top: 1px;
      background-size: 10px 1px;
      background-repeat: repeat-x;
      background-position: center top;
  }

  scrolledwindow undershoot.bottom {
      background-image: linear-gradient(to left, rgba(255, 255, 255, 0.2) 50%, rgba(0, 0, 0, 0.2) 50%);
      padding-bottom: 1px;
      background-size: 10px 1px;
      background-repeat: repeat-x;
      background-position: center bottom;
  }

  scrolledwindow undershoot.left {
      background-image: linear-gradient(to top, rgba(255, 255, 255, 0.2) 50%, rgba(0, 0, 0, 0.2) 50%);
      padding-left: 1px;
      background-size: 1px 10px;
      background-repeat: repeat-y;
      background-position: left center;
  }

  scrolledwindow undershoot.right {
      background-image: linear-gradient(to top, rgba(255, 255, 255, 0.2) 50%, rgba(0, 0, 0, 0.2) 50%);
      padding-right: 1px;
      background-size: 1px 10px;
      background-repeat: repeat-y;
      background-position: right center;
  }

  scrolledwindow > junction {
      background: #cdc7c2, linear-gradient(to bottom, transparent 1px, #cecece 1px), linear-gradient(to right, transparent 1px, #cecece 1px);
  }

  scrolledwindow > junction:dir(rtl) {
      background: #cdc7c2, linear-gradient(to bottom, transparent 1px, #cecece 1px), linear-gradient(to left, transparent 1px, #cecece 1px);
  }

#+end_src
*** frame
#+begin_src css

  /*************************************************/
  /*                    FRAME                      */
  /*************************************************/
  
  frame.border-inset > border {
      border: inset 1px @border_color;
  }

  frame.border-outset > border {
      border: outset 1px @border_color;
  }

  frame.border-groove > border {
      border: groove 2px @border_color;
  }

  frame.border-ridge > border {
      border: ridge 2px @border_color;
  }
#+end_src
*** viewport
#+begin_src css

  /*************************************************/
  /*                 VIEWPORT                      */
  /*************************************************/

  viewport {
      /* background-color makes black outline. dunno why! */
      background-image: linear-gradient(to bottom, @base_color, @base_color);
  }
#+end_src
*** dialog
#+begin_src css
  /*************************************************/
  /*                    DIALOG                     */
  /*************************************************/

  window.dialog,
  dialog {
      background-color: @bg_color;
  }

  window.dialog > decoration,
  dialog > decoration {
      border: 1px solid @border_color;
      box-shadow: 0px 0px 4px 2px rgba(0,0,0,0.4);
      /* margin is required to display window resize handle */
      margin: 4px;
      border-radius: 6px 6px 0px 0px;
  }
#+end_src

**** filechooser(open/save)
*Before v4.10*, GtkFileChooserDialog has a single CSS node with the name window and style class .filechooser.
*Sice v4.10*, GtkFileDialog has replaced it.

#+begin_src css

  /*************************************************/
  /*               FILECHOOSER                     */
  /*************************************************/

  window.filechooser.vertical > box.vertical:not(.search-bar),
  filechooser.vertical > box.vertical:not(.search-bar) {
      border-top: 1px solid @light_border_color;
      border-bottom: 1px solid @light_border_color;
  }

  window.filechooser.vertical > box.vertical:not(.search-bar) scrolledwindow,
  filechooser.vertical > box.vertical:not(.search-bar) scrolledwindow {
      border: none;
  }
#+end_src
**** print dialog
GtkPrintDialog object collects the arguments that are needed to present a print dialog to the user, such as a title for the dialog and whether it should be modal.

#+begin_src css
  
  /*************************************************/
  /*                 PRINT DIALOG                  */
  /*************************************************/

  printdialog paper {
      border: 1px solid @light_border_color;
      background: white;
      padding: 0;
  }
#+end_src
**** message dialog
GtkMessageDialog presents a dialog with some message text.
*Before v4.10*, The GtkMessageDialog exposes the message area as an internal child with the name "message_area".
*Since v4.10*, GtkAlertDialog has replaced it.

#+begin_src css

  /*************************************************/
  /*                MESSAGE DIALOG                 */
  /*************************************************/

  messagedialog,
  alertdialog {
      background-color: @bg_color;
      border: 1px solid @border_color;
      border-radius: 6px;
      box-shadow: 0  2px 5px 2px rgba(0, 0, 0, 0.4);      
  }

  messagedialog .titlebar {
      min-height: 16px;
      background-image: linear-gradient(to top, #7e8185 1px, #999ca1 1px, #b5b8be);    
      border-bottom: 1px solid @border_color;
      font-weight: 900;
      text-shadow: 0 1px alpha(#ffffff, 0.35);    
  }
#+end_src
* Other Widgets
** calendar
#+begin_src css

  /*************************************************/
  /*                  CALENDER                     */
  /*************************************************/

  calendar {
      color: @fg_color;
      background-color: @base_color;
      border: 1px solid @light_border_color;
      border-radius: 5px;
      padding: 2px;
  }

  calendar:selected {
      color: #ffffff;
      background-color: @selected_bg_color;
      border-radius: 1.5px;
  }

  calendar:indeterminate {
      color: alpha(currentColor,0.55);
  }

  calendar.highlight {
      color: @fg_color;
  }

  calendar:disabled:selected {
      color: #90b5ec;
  }

  calendar > header {
      color: @fg_color;
      background-color: @menubar_bg;
      border: none;
      padding: 3px;
  }

  calendar > header > button.image-button {
      padding: 0px;
      border: 1px solid transparent;
      border-radius: 50%;
      background-color: transparent;
      background-image: none;
      box-shadow: none;
      color: black;
  }

  calendar > header > button.image-button:hover {
      background-color: shade(@menubar_bg, 1.2);
  }

  calendar > header > button:disabled {
      color: @insensitive_fg_color;
  }

  calendar > grid > label.other-month {
      color: @insensitive_fg_color;
  }

#+end_src
** colorswatch
#+begin_src css
  
  /*************************************************/
  /*                 COLORSWATCH                   */
  /*************************************************/

  colorswatch,
  colorswatch:drop(active) {
      border-style: none;
  }

  colorswatch.top {
      border-top-left-radius: 2.5px;
      border-top-right-radius: 2.5px;
  }

  colorswatch.top overlay {
      border-top-left-radius: 2px;
      border-top-right-radius: 2px;
  }

  colorswatch.bottom {
      border-bottom-left-radius: 2.5px;
      border-bottom-right-radius: 2.5px;
  }

  colorswatch.bottom overlay {
      border-bottom-left-radius: 2px;
      border-bottom-right-radius: 2px;
  }

  colorswatch.left,
  colorswatch:first-child:not(.top) {
      border-top-right-radius:0px;
      border-bottom-right-radius:0px;
      border-top-left-radius: 2.5px;
      border-bottom-left-radius: 2.5px;
  }

  colorswatch.left overlay,
  colorswatch:first-child:not(.top) overlay {
      border-top-right-radius:0px;
      border-bottom-right-radius:0px;
      border-top-left-radius: 2px;
      border-bottom-left-radius: 2px;
  }

  colorswatch.right,
  colorswatch:last-child:not(.bottom) {
      border-top-left-radius: 0px;
      border-bottom-left-radius: 0px;
      border-top-right-radius: 2.5px;
      border-bottom-right-radius: 2.5px;
  }

  colorswatch.right overlay,
  colorswatch:last-child:not(.bottom) overlay {
      border-top-left-radius: 0px;
      border-bottom-left-radius: 0px;
      border-top-right-radius: 2px;
      border-bottom-right-radius: 2px;
  }

  colorswatch.dark overlay {
      color: rgba(255, 255, 255, 0.7);
  }

  colorswatch.dark overlay:hover {
      border-color: rgba(0, 0, 0, 0.5);
  }

  colorswatch.light overlay {
      color: rgba(0, 0, 0, 0.7);
  }

  colorswatch.light overlay:hover {
      border-color: rgba(0, 0, 0, 0.3);
  }

  colorswatch overlay {
      border: 1px solid rgba(0, 0, 0, 0.15);
  }

  colorswatch overlay:hover {
      background-color: rgba(255, 255, 255, 0.2);
  }

  colorswatch:disabled {
      opacity: 0.5;
  }

  colorswatch:disabled overlay {
      border-color: rgba(0, 0, 0, 0.6);
      box-shadow: none;
  }

  colorswatch#add-color-button {
      border-style: solid;
      border-width: 1px;
      color: @fg_color;
      border-color: rgba(0, 0, 0, 0.2);
      background-color: white;
  }

  colorswatch#add-color-button:hover {
      color: @fg_color;
      border-color: rgba(0, 0, 0, 0.1);
      background-color: white;
  }

  colorswatch#add-color-button overlay {
      border-color: transparent;
      background-color: transparent;
      background-image: none;
  }

  button.color {
      padding: 0;
  }

  button.color colorswatch:first-child:last-child {
      margin: 4px;
      border-radius: 0;
  }

  button.color colorswatch:first-child:last-child overlay {
      margin: 4px;
      border-radius: 0;
  }
#+end_src
* import others
** apps
#+begin_src css
  @import url("apps.css");
#+end_src
